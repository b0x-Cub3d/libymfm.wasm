{"mappings":"A,C,K,S,E,C,C,C,C,C,C,C,E,O,e,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,Q,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,K,E,Q,E,E,S,E,O,C,I,E,A,M,uB,E,I,O,E,K,mB,C,C,E,S,S,C,C,C,E,C,C,E,C,C,E,E,kB,G,E,S,Q,S,C,C,C,MCAI,EAAa,SAAS,EAAc,CAAO,EAAI,EAAO,CAAS,C,E,E,Q,gB,I,G,E,E,Q,U,I,G,E,E,Q,U,I,G,E,E,Q,6B,I,G,E,E,Q,+B,I,G,E,E,Q,+B,I,G,E,E,Q,6B,I,G,E,E,Q,mB,I,GAEnE,IAAM,EAAO,AAAI,MAAM,IAAI,KAAK,KAAA,GAEhC,EAAK,KAAK,KAAA,EAAW,KAAM,CAAA,EAAM,CAAA,GAIjC,IAAI,EAAY,EAAK,OAcf,EAAe,AAAuB,aAAvB,OAAO,YAA8B,AAAC,CAAA,EAAG,EAAO,OAAA,EAAS,QAAQ,YAAc,YAEhG,EAAoB,IAAI,EAAa,QAAS,CAAE,UAAW,CAAA,EAAM,MAAO,CAAA,CAAK,GAEjF,EAAkB,SAElB,IAAI,EAAuB,KAC3B,SAAS,IAIL,MAHI,CAAA,AAAyB,OAAzB,GAAiC,EAAqB,SAAW,EAAK,OAAO,MAAA,GAC7E,CAAA,EAAuB,IAAI,WAAW,EAAK,OAAO,OADtD,EAGO,CACX,CAEA,SAAS,EAAmB,CAAG,CAAE,CAAG,EAChC,OAAO,EAAkB,OAAO,IAAkB,SAAS,EAAK,EAAM,GAC1E,CAEA,IAAI,EAAuB,KAC3B,SAAS,IAIL,MAHI,CAAA,AAAyB,OAAzB,GAAiC,EAAqB,SAAW,EAAK,OAAO,MAAA,GAC7E,CAAA,EAAuB,IAAI,WAAW,EAAK,OAAO,OADtD,EAGO,CACX,CAWA,IAAI,EAAkB,EAEhB,EAAe,AAAuB,aAAvB,OAAO,YAA8B,AAAC,CAAA,EAAG,EAAO,OAAA,EAAS,QAAQ,YAAc,YAEhG,EAAoB,IAAI,EAAa,SAEnC,EAAgB,AAAw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","sources":["<anon>","src/wasm/libymfm_bg.js"],"sourcesContent":["(() => {\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire546c\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire546c\"] = parcelRequire;\n}\nparcelRequire.register(\"axQNg\", function(module, exports) {\n\n$parcel$export(module.exports, \"setWasmExport\", () => $7ad5f0276c6708bd$export$610d0ad2012606bf);\n$parcel$export(module.exports, \"VgmPlay\", () => $7ad5f0276c6708bd$export$7f87b0126f71abde);\n$parcel$export(module.exports, \"XgmPlay\", () => $7ad5f0276c6708bd$export$f83667a3b5678133);\n$parcel$export(module.exports, \"__wbg_new_693216e109162396\", () => $7ad5f0276c6708bd$export$3f8dff4d4399abf7);\n$parcel$export(module.exports, \"__wbg_stack_0ddaca5d1abfb52f\", () => $7ad5f0276c6708bd$export$86027da89801aab6);\n$parcel$export(module.exports, \"__wbg_error_09919627ac0992f5\", () => $7ad5f0276c6708bd$export$73ca251b56fc52a2);\n$parcel$export(module.exports, \"__wbindgen_object_drop_ref\", () => $7ad5f0276c6708bd$export$b385d28488f5908e);\n$parcel$export(module.exports, \"__wbindgen_throw\", () => $7ad5f0276c6708bd$export$39a6850c64af1eb3);\nlet $7ad5f0276c6708bd$var$wasm;\nfunction $7ad5f0276c6708bd$export$610d0ad2012606bf(exports) {\n    $7ad5f0276c6708bd$var$wasm = exports;\n}\nconst $7ad5f0276c6708bd$var$heap = new Array(32).fill(undefined);\n$7ad5f0276c6708bd$var$heap.push(undefined, null, true, false);\nfunction $7ad5f0276c6708bd$var$getObject(idx) {\n    return $7ad5f0276c6708bd$var$heap[idx];\n}\nlet $7ad5f0276c6708bd$var$heap_next = $7ad5f0276c6708bd$var$heap.length;\nfunction $7ad5f0276c6708bd$var$dropObject(idx) {\n    if (idx < 36) return;\n    $7ad5f0276c6708bd$var$heap[idx] = $7ad5f0276c6708bd$var$heap_next;\n    $7ad5f0276c6708bd$var$heap_next = idx;\n}\nfunction $7ad5f0276c6708bd$var$takeObject(idx) {\n    const ret = $7ad5f0276c6708bd$var$getObject(idx);\n    $7ad5f0276c6708bd$var$dropObject(idx);\n    return ret;\n}\nconst $7ad5f0276c6708bd$var$lTextDecoder = typeof TextDecoder === \"undefined\" ? (0, module.require)(\"util\").TextDecoder : TextDecoder;\nlet $7ad5f0276c6708bd$var$cachedTextDecoder = new $7ad5f0276c6708bd$var$lTextDecoder(\"utf-8\", {\n    ignoreBOM: true,\n    fatal: true\n});\n$7ad5f0276c6708bd$var$cachedTextDecoder.decode();\nlet $7ad5f0276c6708bd$var$cachegetUint8Memory0 = null;\nfunction $7ad5f0276c6708bd$var$getUint8Memory0() {\n    if ($7ad5f0276c6708bd$var$cachegetUint8Memory0 === null || $7ad5f0276c6708bd$var$cachegetUint8Memory0.buffer !== $7ad5f0276c6708bd$var$wasm.memory.buffer) $7ad5f0276c6708bd$var$cachegetUint8Memory0 = new Uint8Array($7ad5f0276c6708bd$var$wasm.memory.buffer);\n    return $7ad5f0276c6708bd$var$cachegetUint8Memory0;\n}\nfunction $7ad5f0276c6708bd$var$getStringFromWasm0(ptr, len) {\n    return $7ad5f0276c6708bd$var$cachedTextDecoder.decode($7ad5f0276c6708bd$var$getUint8Memory0().subarray(ptr, ptr + len));\n}\nlet $7ad5f0276c6708bd$var$cachegetInt32Memory0 = null;\nfunction $7ad5f0276c6708bd$var$getInt32Memory0() {\n    if ($7ad5f0276c6708bd$var$cachegetInt32Memory0 === null || $7ad5f0276c6708bd$var$cachegetInt32Memory0.buffer !== $7ad5f0276c6708bd$var$wasm.memory.buffer) $7ad5f0276c6708bd$var$cachegetInt32Memory0 = new Int32Array($7ad5f0276c6708bd$var$wasm.memory.buffer);\n    return $7ad5f0276c6708bd$var$cachegetInt32Memory0;\n}\nfunction $7ad5f0276c6708bd$var$addHeapObject(obj) {\n    if ($7ad5f0276c6708bd$var$heap_next === $7ad5f0276c6708bd$var$heap.length) $7ad5f0276c6708bd$var$heap.push($7ad5f0276c6708bd$var$heap.length + 1);\n    const idx = $7ad5f0276c6708bd$var$heap_next;\n    $7ad5f0276c6708bd$var$heap_next = $7ad5f0276c6708bd$var$heap[idx];\n    $7ad5f0276c6708bd$var$heap[idx] = obj;\n    return idx;\n}\nlet $7ad5f0276c6708bd$var$WASM_VECTOR_LEN = 0;\nconst $7ad5f0276c6708bd$var$lTextEncoder = typeof TextEncoder === \"undefined\" ? (0, module.require)(\"util\").TextEncoder : TextEncoder;\nlet $7ad5f0276c6708bd$var$cachedTextEncoder = new $7ad5f0276c6708bd$var$lTextEncoder(\"utf-8\");\nconst $7ad5f0276c6708bd$var$encodeString = typeof $7ad5f0276c6708bd$var$cachedTextEncoder.encodeInto === \"function\" ? function(arg, view) {\n    return $7ad5f0276c6708bd$var$cachedTextEncoder.encodeInto(arg, view);\n} : function(arg, view) {\n    const buf = $7ad5f0276c6708bd$var$cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n};\nfunction $7ad5f0276c6708bd$var$passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        const buf = $7ad5f0276c6708bd$var$cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        $7ad5f0276c6708bd$var$getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        $7ad5f0276c6708bd$var$WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n    let len = arg.length;\n    let ptr = malloc(len);\n    const mem = $7ad5f0276c6708bd$var$getUint8Memory0();\n    let offset = 0;\n    for(; offset < len; offset++){\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) arg = arg.slice(offset);\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = $7ad5f0276c6708bd$var$getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = $7ad5f0276c6708bd$var$encodeString(arg, view);\n        offset += ret.written;\n    }\n    $7ad5f0276c6708bd$var$WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nclass $7ad5f0276c6708bd$export$7f87b0126f71abde {\n    static __wrap(ptr) {\n        const obj = Object.create($7ad5f0276c6708bd$export$7f87b0126f71abde.prototype);\n        obj.ptr = ptr;\n        return obj;\n    }\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    }\n    free() {\n        const ptr = this.__destroy_into_raw();\n        $7ad5f0276c6708bd$var$wasm.__wbg_vgmplay_free(ptr);\n    }\n    /**\n    *\n    * constructor\n    * @param {number} output_sampling_rate\n    * @param {number} output_sample_chunk_size\n    * @param {number} data_length\n    */ constructor(output_sampling_rate, output_sample_chunk_size, data_length){\n        var ret = $7ad5f0276c6708bd$var$wasm.vgmplay_from(output_sampling_rate, output_sample_chunk_size, data_length);\n        return $7ad5f0276c6708bd$export$7f87b0126f71abde.__wrap(ret);\n    }\n    /**\n    *\n    * Return vgmdata buffer referance.\n    * @returns {number}\n    */ get_seq_data_ref() {\n        var ret = $7ad5f0276c6708bd$var$wasm.vgmplay_get_seq_data_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Return sampling_l buffer referance.\n    * @returns {number}\n    */ get_sampling_l_ref() {\n        var ret = $7ad5f0276c6708bd$var$wasm.vgmplay_get_sampling_l_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Return sampling_r buffer referance.\n    * @returns {number}\n    */ get_sampling_r_ref() {\n        var ret = $7ad5f0276c6708bd$var$wasm.vgmplay_get_sampling_r_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Get the JSON parsed from the header of the VGM file.\n    * @returns {string}\n    */ get_seq_header() {\n        try {\n            const retptr = $7ad5f0276c6708bd$var$wasm.__wbindgen_add_to_stack_pointer(-16);\n            $7ad5f0276c6708bd$var$wasm.vgmplay_get_seq_header(retptr, this.ptr);\n            var r0 = $7ad5f0276c6708bd$var$getInt32Memory0()[retptr / 4 + 0];\n            var r1 = $7ad5f0276c6708bd$var$getInt32Memory0()[retptr / 4 + 1];\n            return $7ad5f0276c6708bd$var$getStringFromWasm0(r0, r1);\n        } finally{\n            $7ad5f0276c6708bd$var$wasm.__wbindgen_add_to_stack_pointer(16);\n            $7ad5f0276c6708bd$var$wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *\n    * Get the JSON parsed GD3 of the VGM file.\n    * @returns {string}\n    */ get_seq_gd3() {\n        try {\n            const retptr = $7ad5f0276c6708bd$var$wasm.__wbindgen_add_to_stack_pointer(-16);\n            $7ad5f0276c6708bd$var$wasm.vgmplay_get_seq_gd3(retptr, this.ptr);\n            var r0 = $7ad5f0276c6708bd$var$getInt32Memory0()[retptr / 4 + 0];\n            var r1 = $7ad5f0276c6708bd$var$getInt32Memory0()[retptr / 4 + 1];\n            return $7ad5f0276c6708bd$var$getStringFromWasm0(r0, r1);\n        } finally{\n            $7ad5f0276c6708bd$var$wasm.__wbindgen_add_to_stack_pointer(16);\n            $7ad5f0276c6708bd$var$wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *\n    * Initialize sound driver.\n    * @returns {boolean}\n    */ init() {\n        var ret = $7ad5f0276c6708bd$var$wasm.vgmplay_init(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    *\n    * Continue playing until output_sample_chunk_size is satisfied.\n    *\n    * The number of times the song has been looped will be returned.\n    * In the case of an infinite loop, the std::usize::MAX value is always returned.\n    * @returns {number}\n    */ play() {\n        var ret = $7ad5f0276c6708bd$var$wasm.vgmplay_play(this.ptr);\n        return ret >>> 0;\n    }\n}\nclass $7ad5f0276c6708bd$export$f83667a3b5678133 {\n    static __wrap(ptr) {\n        const obj = Object.create($7ad5f0276c6708bd$export$f83667a3b5678133.prototype);\n        obj.ptr = ptr;\n        return obj;\n    }\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    }\n    free() {\n        const ptr = this.__destroy_into_raw();\n        $7ad5f0276c6708bd$var$wasm.__wbg_xgmplay_free(ptr);\n    }\n    /**\n    *\n    * constructor\n    * @param {number} output_sampling_rate\n    * @param {number} output_sample_chunk_size\n    * @param {number} data_length\n    */ constructor(output_sampling_rate, output_sample_chunk_size, data_length){\n        var ret = $7ad5f0276c6708bd$var$wasm.xgmplay_from(output_sampling_rate, output_sample_chunk_size, data_length);\n        return $7ad5f0276c6708bd$export$f83667a3b5678133.__wrap(ret);\n    }\n    /**\n    *\n    * Return xgmdata buffer referance.\n    * @returns {number}\n    */ get_seq_data_ref() {\n        var ret = $7ad5f0276c6708bd$var$wasm.xgmplay_get_seq_data_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Return sampling_l buffer referance.\n    * @returns {number}\n    */ get_sampling_l_ref() {\n        var ret = $7ad5f0276c6708bd$var$wasm.xgmplay_get_sampling_l_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Return sampling_r buffer referance.\n    * @returns {number}\n    */ get_sampling_r_ref() {\n        var ret = $7ad5f0276c6708bd$var$wasm.xgmplay_get_sampling_r_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Get the JSON parsed from the header of the XGM file.\n    * @returns {string}\n    */ get_seq_header() {\n        try {\n            const retptr = $7ad5f0276c6708bd$var$wasm.__wbindgen_add_to_stack_pointer(-16);\n            $7ad5f0276c6708bd$var$wasm.xgmplay_get_seq_header(retptr, this.ptr);\n            var r0 = $7ad5f0276c6708bd$var$getInt32Memory0()[retptr / 4 + 0];\n            var r1 = $7ad5f0276c6708bd$var$getInt32Memory0()[retptr / 4 + 1];\n            return $7ad5f0276c6708bd$var$getStringFromWasm0(r0, r1);\n        } finally{\n            $7ad5f0276c6708bd$var$wasm.__wbindgen_add_to_stack_pointer(16);\n            $7ad5f0276c6708bd$var$wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *\n    * Get the JSON parsed GD3 of the XGM file.\n    * @returns {string}\n    */ get_seq_gd3() {\n        try {\n            const retptr = $7ad5f0276c6708bd$var$wasm.__wbindgen_add_to_stack_pointer(-16);\n            $7ad5f0276c6708bd$var$wasm.xgmplay_get_seq_gd3(retptr, this.ptr);\n            var r0 = $7ad5f0276c6708bd$var$getInt32Memory0()[retptr / 4 + 0];\n            var r1 = $7ad5f0276c6708bd$var$getInt32Memory0()[retptr / 4 + 1];\n            return $7ad5f0276c6708bd$var$getStringFromWasm0(r0, r1);\n        } finally{\n            $7ad5f0276c6708bd$var$wasm.__wbindgen_add_to_stack_pointer(16);\n            $7ad5f0276c6708bd$var$wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *\n    * Initialize sound driver.\n    * @returns {boolean}\n    */ init() {\n        var ret = $7ad5f0276c6708bd$var$wasm.xgmplay_init(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    *\n    * Continue playing until output_sample_chunk_size is satisfied.\n    *\n    * The number of times the song has been looped will be returned.\n    * In the case of an infinite loop, the std::usize::MAX value is always returned.\n    * @returns {number}\n    */ play() {\n        var ret = $7ad5f0276c6708bd$var$wasm.xgmplay_play(this.ptr);\n        return ret >>> 0;\n    }\n}\nfunction $7ad5f0276c6708bd$export$3f8dff4d4399abf7() {\n    var ret = new Error();\n    return $7ad5f0276c6708bd$var$addHeapObject(ret);\n}\nfunction $7ad5f0276c6708bd$export$86027da89801aab6(arg0, arg1) {\n    var ret = $7ad5f0276c6708bd$var$getObject(arg1).stack;\n    var ptr0 = $7ad5f0276c6708bd$var$passStringToWasm0(ret, $7ad5f0276c6708bd$var$wasm.__wbindgen_malloc, $7ad5f0276c6708bd$var$wasm.__wbindgen_realloc);\n    var len0 = $7ad5f0276c6708bd$var$WASM_VECTOR_LEN;\n    $7ad5f0276c6708bd$var$getInt32Memory0()[arg0 / 4 + 1] = len0;\n    $7ad5f0276c6708bd$var$getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}\nfunction $7ad5f0276c6708bd$export$73ca251b56fc52a2(arg0, arg1) {\n    try {\n        console.error($7ad5f0276c6708bd$var$getStringFromWasm0(arg0, arg1));\n    } finally{\n        $7ad5f0276c6708bd$var$wasm.__wbindgen_free(arg0, arg1);\n    }\n}\nfunction $7ad5f0276c6708bd$export$b385d28488f5908e(arg0) {\n    $7ad5f0276c6708bd$var$takeObject(arg0);\n}\nfunction $7ad5f0276c6708bd$export$39a6850c64af1eb3(arg0, arg1) {\n    throw new Error($7ad5f0276c6708bd$var$getStringFromWasm0(arg0, arg1));\n}\n\n});\n\n\nparcelRequire(\"axQNg\");\n})();\n//# sourceMappingURL=libymfm_bg.b137cd3b.js.map\n","let wasm; export function setWasmExport(exports) { wasm = exports; }\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n*/\nexport class VgmPlay {\n\n    static __wrap(ptr) {\n        const obj = Object.create(VgmPlay.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_vgmplay_free(ptr);\n    }\n    /**\n    *\n    * constructor\n    * @param {number} output_sampling_rate\n    * @param {number} output_sample_chunk_size\n    * @param {number} data_length\n    */\n    constructor(output_sampling_rate, output_sample_chunk_size, data_length) {\n        var ret = wasm.vgmplay_from(output_sampling_rate, output_sample_chunk_size, data_length);\n        return VgmPlay.__wrap(ret);\n    }\n    /**\n    *\n    * Return vgmdata buffer referance.\n    * @returns {number}\n    */\n    get_seq_data_ref() {\n        var ret = wasm.vgmplay_get_seq_data_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Return sampling_l buffer referance.\n    * @returns {number}\n    */\n    get_sampling_l_ref() {\n        var ret = wasm.vgmplay_get_sampling_l_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Return sampling_r buffer referance.\n    * @returns {number}\n    */\n    get_sampling_r_ref() {\n        var ret = wasm.vgmplay_get_sampling_r_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Get the JSON parsed from the header of the VGM file.\n    * @returns {string}\n    */\n    get_seq_header() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.vgmplay_get_seq_header(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *\n    * Get the JSON parsed GD3 of the VGM file.\n    * @returns {string}\n    */\n    get_seq_gd3() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.vgmplay_get_seq_gd3(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *\n    * Initialize sound driver.\n    * @returns {boolean}\n    */\n    init() {\n        var ret = wasm.vgmplay_init(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    *\n    * Continue playing until output_sample_chunk_size is satisfied.\n    *\n    * The number of times the song has been looped will be returned.\n    * In the case of an infinite loop, the std::usize::MAX value is always returned.\n    * @returns {number}\n    */\n    play() {\n        var ret = wasm.vgmplay_play(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class XgmPlay {\n\n    static __wrap(ptr) {\n        const obj = Object.create(XgmPlay.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_xgmplay_free(ptr);\n    }\n    /**\n    *\n    * constructor\n    * @param {number} output_sampling_rate\n    * @param {number} output_sample_chunk_size\n    * @param {number} data_length\n    */\n    constructor(output_sampling_rate, output_sample_chunk_size, data_length) {\n        var ret = wasm.xgmplay_from(output_sampling_rate, output_sample_chunk_size, data_length);\n        return XgmPlay.__wrap(ret);\n    }\n    /**\n    *\n    * Return xgmdata buffer referance.\n    * @returns {number}\n    */\n    get_seq_data_ref() {\n        var ret = wasm.xgmplay_get_seq_data_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Return sampling_l buffer referance.\n    * @returns {number}\n    */\n    get_sampling_l_ref() {\n        var ret = wasm.xgmplay_get_sampling_l_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Return sampling_r buffer referance.\n    * @returns {number}\n    */\n    get_sampling_r_ref() {\n        var ret = wasm.xgmplay_get_sampling_r_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Get the JSON parsed from the header of the XGM file.\n    * @returns {string}\n    */\n    get_seq_header() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.xgmplay_get_seq_header(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *\n    * Get the JSON parsed GD3 of the XGM file.\n    * @returns {string}\n    */\n    get_seq_gd3() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.xgmplay_get_seq_gd3(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *\n    * Initialize sound driver.\n    * @returns {boolean}\n    */\n    init() {\n        var ret = wasm.xgmplay_init(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    *\n    * Continue playing until output_sample_chunk_size is satisfied.\n    *\n    * The number of times the song has been looped will be returned.\n    * In the case of an infinite loop, the std::usize::MAX value is always returned.\n    * @returns {number}\n    */\n    play() {\n        var ret = wasm.xgmplay_play(this.ptr);\n        return ret >>> 0;\n    }\n}\n\nexport function __wbg_new_693216e109162396() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_stack_0ddaca5d1abfb52f(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_error_09919627ac0992f5(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7ad5f0276c6708bd$var$wasm","$7ad5f0276c6708bd$export$610d0ad2012606bf","$7ad5f0276c6708bd$export$7f87b0126f71abde","$7ad5f0276c6708bd$export$f83667a3b5678133","$7ad5f0276c6708bd$export$3f8dff4d4399abf7","$7ad5f0276c6708bd$export$86027da89801aab6","$7ad5f0276c6708bd$export$73ca251b56fc52a2","$7ad5f0276c6708bd$export$b385d28488f5908e","$7ad5f0276c6708bd$export$39a6850c64af1eb3","$7ad5f0276c6708bd$var$heap","Array","fill","undefined","push","$7ad5f0276c6708bd$var$heap_next","length","$7ad5f0276c6708bd$var$lTextDecoder","TextDecoder","require","$7ad5f0276c6708bd$var$cachedTextDecoder","ignoreBOM","fatal","decode","$7ad5f0276c6708bd$var$cachegetUint8Memory0","$7ad5f0276c6708bd$var$getUint8Memory0","buffer","memory","Uint8Array","$7ad5f0276c6708bd$var$getStringFromWasm0","ptr","len","subarray","$7ad5f0276c6708bd$var$cachegetInt32Memory0","$7ad5f0276c6708bd$var$getInt32Memory0","Int32Array","$7ad5f0276c6708bd$var$WASM_VECTOR_LEN","$7ad5f0276c6708bd$var$lTextEncoder","TextEncoder","$7ad5f0276c6708bd$var$cachedTextEncoder","$7ad5f0276c6708bd$var$encodeString","encodeInto","arg","view","buf","encode","read","written","__wrap","obj","create","prototype","__destroy_into_raw","free","__wbg_vgmplay_free","constructor","output_sampling_rate","output_sample_chunk_size","data_length","ret","vgmplay_from","get_seq_data_ref","vgmplay_get_seq_data_ref","get_sampling_l_ref","vgmplay_get_sampling_l_ref","get_sampling_r_ref","vgmplay_get_sampling_r_ref","get_seq_header","retptr","__wbindgen_add_to_stack_pointer","vgmplay_get_seq_header","r0","r1","__wbindgen_free","get_seq_gd3","vgmplay_get_seq_gd3","vgmplay_init","play","vgmplay_play","__wbg_xgmplay_free","xgmplay_from","xgmplay_get_seq_data_ref","xgmplay_get_sampling_l_ref","xgmplay_get_sampling_r_ref","xgmplay_get_seq_header","xgmplay_get_seq_gd3","xgmplay_init","xgmplay_play","$7ad5f0276c6708bd$var$addHeapObject","idx","arg0","arg1","ptr0","$7ad5f0276c6708bd$var$passStringToWasm0","malloc","realloc","mem","offset","charCodeAt","slice","$7ad5f0276c6708bd$var$getObject","stack","__wbindgen_malloc","__wbindgen_realloc","len0","console","error"],"version":3,"file":"libymfm_bg.b137cd3b.js.map"}