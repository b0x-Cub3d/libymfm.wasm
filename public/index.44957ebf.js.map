{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/wgm_main_thread.js","src/js/const.js","node_modules/@parcel/runtime-js/lib/runtime-4d51a37677aff010.js","node_modules/@parcel/runtime-js/lib/runtime-baae1d648c54c9cb.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-b29f1b520b25159e.js","src/js/main.js","node_modules/@parcel/runtime-js/lib/runtime-22ba9c7a74f387ed.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\nimport * as def from './const.js'\nimport worklet from 'worklet:./wgm_worklet_processor.js'; // worklet: Parcel\n\n/**\n * AudioWorklet Controller\n */\nexport class WgmController {\n    /**\n     * Constructor\n     *\n     * @param {ArrayBuffer} module WebAssembly module binary\n     * @param {number} samplingRate Sampling rate\n     * @param {number} loopMaxCount Max loop count\n     */\n    constructor(module, samplingRate, loopMaxCount) {\n        // WebAssembly binary\n        this.module = module;\n        // Worker and Worklet\n        this.worklet = null;\n        this.worker = null;\n        this.callback = null;\n        // shared memory Worker, Worklet\n        this.sharedRingL = [];\n        this.sharedRingR = [];\n        this.sharedStatus = null;\n        // sampling rate\n        this.samplingRate = samplingRate;\n        this.loopMaxCount = loopMaxCount;\n        this.chunkSize = def.AUDIO_WORKLET_SAMPLING_CHUNK * def.BUFFERING_CHUNK_COUNT;\n        this.feedOutRemain = 1; // 1chunk\n        this.feedOutSecond = Math.floor(this.chunkSize * this.feedOutRemain / samplingRate);\n        // init audio contexts\n        this.context = null;\n        this.gain = null;\n        this.analyser = null;\n        this.analyserBuffer = null;\n        this.analyserBufferLength = null;\n    }\n\n    /**\n     * prepare AudioContext and AudioWorklet\n     *\n     * Create Worklet and compile Webassembly in Worklet\n     *\n     * @param {AudioContext} context AudioContext\n     */\n    async prepare(context, callback) {\n        // set audio context\n        this.context = context;\n        // create shared memory\n        try {\n            for(let i = 0; i < def.BUFFER_RING_COUNT; i++) {\n                this.sharedRingL[i] = new SharedArrayBuffer(this.chunkSize * 4); // * 4: Float32Array;\n                this.sharedRingR[i] = new SharedArrayBuffer(this.chunkSize * 4); // * 4: Float32Array;\n            }\n            this.sharedStatus = new SharedArrayBuffer(1024); // Int32Array\n        } catch(e) {\n            return false;\n        }\n        // create Worker\n        this.worker = new Worker(new URL('wgm_worker.js', import.meta.url), {type: 'module'});\n        this.worker.onmessage = (event) => this.dispatch(event);\n        // create and compile Wasm Worker\n        this.sendWorker({\n            \"message\": \"compile\",\n            \"shared\": {\n                \"ringL\": this.sharedRingL,\n                \"ringR\": this.sharedRingR,\n                \"status\": this.sharedStatus,\n            }\n        }, async () => {\n            // create worklet\n            await this.context.audioWorklet.addModule(worklet);\n            callback();\n        });\n\n        return true;\n    }\n\n    /**\n     * Initialize Controller\n     *\n     * Initialize AudioNode Worklet and analyser\n     */\n    init() {\n        this.worklet = new AudioWorkletNode(this.context, \"wgm-worklet-processor\", {\n            \"numberOfInputs\": 1,\n            \"numberOfOutputs\": 1,\n            \"outputChannelCount\": [2], // 2ch stereo\n            \"processorOptions\": {\n                \"ringL\": this.sharedRingL,\n                \"ringR\": this.sharedRingR,\n                \"status\": this.sharedStatus,\n                \"chunkSteps\": def.BUFFERING_CHUNK_COUNT\n            }\n        });\n        // message dispatch\n        this.worklet.port.onmessage = (event) => this.dispatch(event);\n        // connect gain\n        this.gain = this.context.createGain();\n        this.gain.connect(this.context.destination);\n        // connect node\n        this.worklet.connect(this.gain);\n        // connect fft\n        this.analyser = this.context.createAnalyser();\n        this.analyserBufferLength = this.analyser.frequencyBinCount;\n        this.analyserBuffer = new Uint8Array(this.analyserBufferLength);\n        this.analyser.getByteTimeDomainData(this.analyserBuffer);\n        this.gain.connect(this.analyser);\n    }\n\n    /**\n     * Instance ready?\n     *\n     * @returns {boolean}\n     */\n    ready() {\n        if(this.worklet == null) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Create playable instance\n     *\n     * @param {ArrayBuffer} wgmdata\n     * @param {string} type(vgm|xgm)\n     * @param {Function} callback(gd3meta)\n     */\n    create(wgmdata, type, callback) {\n        // Stop the current loop if there is one\n        // Stop Atomic wait via Worklet\n        this.sendWorklet({\"message\": \"stop\"}, () => {\n            this.sendWorker({\n                \"message\": \"create\",\n                \"wgmdata\": wgmdata,\n                \"type\": type,\n                \"options\": {\n                    \"samplingRate\": this.samplingRate,\n                    \"chunkSize\": this.chunkSize,\n                    \"loopMaxCount\": this.loopMaxCount,\n                    \"feedOutRemain\": this.feedOutRemain,\n                }\n            }, callback);\n        });\n    }\n\n    /**\n     * Start playback\n     *\n     * @param {Function} callback end music callback\n     */\n    play(callback) {\n        // return to 1.0\n        this.gain.gain.setValueAtTime(1, this.context.currentTime);\n        // start buffering\n        this.sendWorker({\"message\": \"start\"});\n        // start playback\n        this.sendWorklet({\"message\": \"play\"}, callback);\n    }\n\n    /**\n     * Get FFT data current time\n     *\n     * @returns FFT array buffer\n     */\n    getByteFrequencyData() {\n        this.analyser.getByteFrequencyData(this.analyserBuffer);\n        return this.analyserBuffer;\n    }\n\n    /**\n     * Get FFT data length\n     *\n     * @returns FFT array length\n     */\n    getAnalyserBufferLength() {\n        return this.analyserBufferLength;\n    }\n\n    /**\n     * Feed out music\n     */\n    feedout() {\n        const now = this.context.currentTime;\n        // feed out to 0.0\n        this.gain.gain.setValueAtTime(1, now);\n        this.gain.gain.linearRampToValueAtTime(0, now + this.feedOutSecond);\n    }\n\n    /**\n     * Message dispatcher\n     *\n     * @param {*} event\n     */\n    async dispatch(event) {\n        switch(event.data.message) {\n            case \"callback\": {\n                if(this.callback != null) {\n                    await this.callback(event.data.data);\n                }\n                break;\n            }\n            case \"feedout\": {\n                this.feedout();\n                break;\n            }\n        }\n    }\n\n    /**\n     * Send message to Worklet\n     *\n     * @param {*} message\n     * @param {Function} callback\n     */\n    sendWorklet(message, callback) {\n        // wait for a reply from the worklet\n        if(callback != null) {\n            this.callback = callback;\n        } else {\n            this.callback = null;\n        }\n        // sends a message to the Worklet\n        this.worklet.port.postMessage(message);\n    }\n\n    /**\n     * Send message to Worklet\n     *\n     * @param {*} message\n     * @param {Function} callback\n     */\n     sendWorker(message, callback) {\n        // wait for a reply from the worklet\n        if(callback != null) {\n            this.callback = callback;\n        } else {\n            this.callback = null;\n        }\n        // sends a message to the Worklet\n        this.worker.postMessage(message);\n    }\n}\n","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\n\n// Audio\nexport const AUDIO_WORKLET_SAMPLING_CHUNK = 128;\nexport const BUFFERING_CHUNK_COUNT = 768;\nexport const BUFFER_RING_COUNT = 4;\nexport const INIT_NOW_PLAYING_RING = 999;\n\n// Status SharedBuffer\nexport const NOW_PLAYING_RING = 0;\nexport const END_OF_MUSIC_CHUNK = 1;\nexport const FEED_OUT_START_CHUNK = 2;\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"frDq4\")).toString();","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"eDdCm\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"g3LtT\\\":\\\"index.44957ebf.js\\\",\\\"frDq4\\\":\\\"wgm_worklet_processor.4d3ce39b.js\\\",\\\"eDdCm\\\":\\\"wgm_worker.3fdb733d.js\\\",\\\"fpIuB\\\":\\\"libymfm_bg.6cea303c.wasm\\\"}\"));","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\nimport { WgmController } from \"./wgm_main_thread\";\n\n/**\n * VGM setting\n */\n const DEFAULT_SAMPLING_RATE = 44100;\n const LOOP_MAX_COUNT = 2;\n\n /**\n  * Canvas settings\n  */\n const CANVAS_WIDTH = 768;\n const CANVAS_HEIGHT = 576;\n const COLOR_MD_GREEN = '#00a040';\n const COLOR_MD_RED = '#e60012';\n const FONT_MAIN_STYLE = '16px sans-serif';\n\n/**\n * AudioWorklet Player\n * @type {WgmController}\n */\nlet player;\n\n/**\n * Audio context\n * @type {AudioContext}\n */\nlet audioContext = null;\n\n/**\n * VGM member\n */\nlet playlist = [];\nlet totalPlaylistCount;\nlet musicMeta;\nlet samplingRate = DEFAULT_SAMPLING_RATE;\n\n/**\n * Canvas\n * @type {HTMLCanvasElement}\n */\nlet canvas;\n\n/**\n * CanvasContext\n * @type {CanvasRenderingContext2D}\n */\nlet canvasContext;\n\nlet animId = null;\n\n/**\n * Canvas setting\n */\n(function() {\n    canvas = document.getElementById('screen');\n    canvas.setAttribute('width', CANVAS_WIDTH);\n    canvas.setAttribute('height', CANVAS_HEIGHT);\n    let pixelRatio = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    if(pixelRatio > 1 && window.screen.width < CANVAS_WIDTH) {\n        canvas.style.width = 320 + \"px\";\n        canvas.style.heigth = 240 + \"px\";\n    }\n    canvasContext = canvas.getContext('2d');\n    canvasContext.font = '20px sans-serif';\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    // now loading\n    const nowloading = \"Now Loading...\";\n    let left = (CANVAS_WIDTH - canvasContext.measureText(nowloading).width) / 2;\n    canvasContext.fillText(nowloading, left, CANVAS_HEIGHT / 2 - 32);\n})();\n\n/**\n * Initialize system and start\n */\n(async function() {\n    /**\n     * Switch sampling rate for test (ex. https://.../#s=48000)\n     *\n     *  let context = new AudioContext({ sampleRate: samplingRate })\n     *\n     * (2021/9)\n     * Support Firefox only. (I haven't confirmed anything other than Linux platform)\n     * In other browsers, the setting works, but the native connection to the audio interface drops to 44100Hz.\n     * There is probably some downsampling going on inside the browser.\n     * Also, the setting itself may be invalid in Safari.\n     */\n    if(location.hash != \"\") {\n        const sample = location.hash.match(/^#s=(\\d+)/);\n        if(sample != null) {\n            samplingRate = parseInt(sample[1]);\n            if(samplingRate != samplingRate /* isNan */\n                || !(samplingRate == 44100 || samplingRate == 48000 || samplingRate == 88200 || samplingRate == 96000)) {\n                samplingRate = DEFAULT_SAMPLING_RATE;\n            }\n        }\n    }\n\n    /**\n     * Pre-fetch WebAssemby binary module\n     */\n    let module = await fetch(new URL('../wasm/libymfm_bg.wasm', import.meta.url));\n    module = new Uint8Array(await module.arrayBuffer())\n    player = new WgmController(module, samplingRate, LOOP_MAX_COUNT);\n\n    /**\n     * Create AudioContext and load WebAssembly module\n     */\n    audioContext = new (window.AudioContext || window.webkitAudioContext)({ sampleRate: samplingRate });\n    if(!await player.prepare(audioContext, () => {\n        /**\n         * Start event loop\n         */\n        start();\n    })) {\n        systemError();\n    }\n})();\n\n/**\n * Start event loop\n */\nconst start = () => {\n    // print information\n    title();\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    canvasContext.font = '14px sans-serif';\n    fillTextCenterd(\"YM2149 | YM2151 | YM2203 | YM2413 | YM2608 | YM2610(B) | YM2612 | YM3526 | Y8950 | YM3812 | YMF262 | YMF278B\", CANVAS_HEIGHT / 2 - 32 * 4 + 16);\n    fillTextCenterd(\"SN76489(MD) | PWM(32X) | SEGAPCM | OKIM6258(X68K) | C140(C219) | OKIM6295\", CANVAS_HEIGHT / 2 - 32 * 3 + 4);\n    canvasContext.font = '20px sans-serif';\n    fillTextCenterd(\"🎶 DRAG AND DROP VGM(vgm/vgz) || XGM(xgm/xgz) HEAR\", CANVAS_HEIGHT / 2 - 32 * 1);\n    canvasContext.font = '15px sans-serif';\n    fillTextCenterd(\"or click to play sample music\", CANVAS_HEIGHT / 2 + 32 * 1);\n    printStatus();\n    // Set UI event\n    canvas.addEventListener('dragover', function(e) {\n        prevent(e);\n        canvas.style.border = '4px dotted #333333';\n        return false;\n    }, false);\n    canvas.addEventListener('dragleave', function(e) {\n        prevent(e);\n        canvas.style.border = '4px solid #000';\n        return false;\n    });\n    // drag to play\n    canvas.addEventListener('drop', onDrop, false);\n    // for sample music data\n    canvas.addEventListener('click', sample, false);\n};\n\n/**\n * System error\n */\nconst systemError = () => {\n    title();\n    fillTextCenterd(\"System initialize error.\", CANVAS_HEIGHT / 2 - 32 * 2);\n    canvasContext.font = '20px sans-serif';\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    fillTextCenterd(\"Your browser does not support SharedArrayBuffer.\", CANVAS_HEIGHT / 2);\n    fillTextCenterd(\"SharedArrayBuffer is supported by Firefox or Chromium systems.\", CANVAS_HEIGHT / 2 + 32);\n    // if(crossOriginIsolated) { // eslint-disable-line no-undef\n    //     fillTextCenterd(\"crossOriginIsolated is not set on the server.\", CANVAS_HEIGHT / 2);\n    // }\n    // no set event loop\n}\n\n/**\n * Title screen\n */\nconst title = () => {\n    canvasContext.fillStyle = 'rgb(0, 0, 0)';\n    canvasContext.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    canvasContext.font = 'bold 28px sans-serif';\n    canvasContext.fillStyle = COLOR_MD_RED;\n    fillTextCenterd(\"WebAssembly 🎮 VGM Player\", CANVAS_HEIGHT / 2 - 32 * 5);\n}\n\n/**\n * Sample music\n */\nconst sample = async () => {\n    // sample music one time\n    canvas.removeEventListener('click', sample, false);\n    // it takes precedence over VGM metadata\n    musicMeta = createGd3meta({\n        track_name: \"🤍 Thank you for trying this player\",\n        track_name_j: \"\",\n        game_name: \"\",\n        game_name_j: \"A synthesizer written in WebAssembly\",\n        track_author: \"See the GitHub repository for more information\",\n        track_author_j: \"\"\n    });\n    const response = await fetch('./vgm/ym2612.vgm');\n    const bytes = await response.arrayBuffer();\n    play(bytes, 'vgm', musicMeta);\n}\n\n/**\n * Event prevent\n *\n * @param {Event} e\n */\nconst prevent = function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n};\n\n/**\n * Drag and Drop\n *\n * @param {DragEvent} ev\n * @returns false (prevent event)\n */\nconst onDrop = (ev) => {\n    prevent(ev);\n    // sample music one time\n    canvas.removeEventListener('click', sample, false);\n    // pause the drop event\n    canvas.removeEventListener('drop', onDrop, false);\n    canvas.style.border = '4px solid #000';\n    let filelist = {};\n    let files = ev.dataTransfer.files;\n    [].forEach.call(files, function(file) {\n        let reader = new FileReader();\n        reader.onload = function() {\n            filelist[file.name] = reader.result;\n            if(Object.keys(filelist).length >= files.length) {\n                // resume the drop event\n                canvas.addEventListener('drop', onDrop, false);\n                playlist = [];\n                Object.keys(filelist).sort().forEach(function(key) {\n                    playlist.push({ filename: key, xgmdata: filelist[key] });\n                });\n                totalPlaylistCount = playlist.length;\n                next();\n            }\n        };\n        reader.readAsArrayBuffer(file);\n    });\n    return false;\n};\n\n/**\n * Play next playlist\n */\nconst next = function() {\n    if(playlist.length <= 0) return;\n    const target = playlist.shift();\n    let type = 'vgm';\n    if(/\\.xg[m|z]$/.test(target.filename)) {\n        type = 'xgm';\n    }\n    play(target.xgmdata, type);\n}\n\n/**\n * Play Music\n *\n * @param {ArrayBuffer} xgmfile\n * @param {string} type(vgm|xgm)\n * @param {*} altMeta\n */\nconst play = function(xgmfile, type, altMeta) {\n    // Worklet exchange callbacks\n    // iOS only sounds AudioWorklet that created by the click event.\n    // In the case of ScriptProcessorNode, I had to create an AudioContext here.\n    if(!player.ready()) {\n        // for Chromium\n        // \"The AudioContext was not allowed to start.\n        //  It must be resumed (or created) after a user gesture on the page.\"\n        audioContext.resume();\n        // create audionode and gain\n        player.init();\n    }\n    player.create(xgmfile, type, (gd3) => {\n        if(altMeta == null) {\n            musicMeta = createGd3meta(gd3);\n        }\n        if(animId != null) {\n            window.cancelAnimationFrame(animId);\n            animId = null;\n        }\n        draw();\n        player.play(next);\n    });\n};\n\n/**\n * Create GD3 meta\n *\n * @param {*} meta\n * @returns\n */\nconst createGd3meta = function(meta) {\n    meta.game_track_name = [meta.game_name, meta.track_name].filter(str => str != \"\").join(\" | \");\n    meta.game_track_name_j = [meta.game_name_j, meta.track_name_j].filter(str => str != \"\").join(\" / \");\n    meta.track_author_full = [meta.track_author, meta.track_author_j].filter(str => str != \"\").join(\" - \");\n    canvasContext.font = FONT_MAIN_STYLE;\n    meta.game_track_name_left = (CANVAS_WIDTH - canvasContext.measureText(meta.game_track_name).width) / 2;\n    meta.game_track_name_j_left = (CANVAS_WIDTH - canvasContext.measureText(meta.game_track_name_j).width) / 2;\n    meta.track_author_full_left = (CANVAS_WIDTH - canvasContext.measureText(meta.track_author_full).width) / 2;\n    return meta;\n};\n\n/**\n * Draw\n */\nconst draw = function() {\n    animId = window.requestAnimationFrame(draw);\n    canvasContext.fillStyle = 'rgb(0, 0, 0)';\n    canvasContext.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    let audioAnalyserBuffer = player.getByteFrequencyData();\n    let audioAnalyserBufferLength = player.getAnalyserBufferLength();\n\n    canvasContext.lineWidth = 1;\n    canvasContext.beginPath();\n    canvasContext.strokeStyle = COLOR_MD_RED;\n\n    let width = 4;\n    let step =  Math.round(audioAnalyserBufferLength / (CANVAS_WIDTH / width));\n    canvasContext.setLineDash([2, 1]);\n    canvasContext.lineWidth = width ;\n    for(var i = 0; i < audioAnalyserBufferLength; i += step) {\n        canvasContext.beginPath();\n        canvasContext.moveTo(i + 2, CANVAS_HEIGHT);\n        canvasContext.lineTo(i + 2, CANVAS_HEIGHT - (audioAnalyserBuffer[i] * 1.5));\n        canvasContext.stroke();\n    }\n    canvasContext.stroke();\n\n    canvasContext.font = \"12px monospace\";\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    if(totalPlaylistCount >= 1) {\n        fillTextCenterd(\"Track \" + (totalPlaylistCount - playlist.length) + \" / \" + totalPlaylistCount, CANVAS_HEIGHT / 2 - 96);\n    }\n    canvasContext.font = FONT_MAIN_STYLE;\n    canvasContext.fillText(musicMeta.game_track_name, musicMeta.game_track_name_left, CANVAS_HEIGHT / 2 - 64);\n    canvasContext.fillText(musicMeta.game_track_name_j, musicMeta.game_track_name_j_left, CANVAS_HEIGHT / 2 - 32);\n    canvasContext.fillText(musicMeta.track_author_full, musicMeta.track_author_full_left, CANVAS_HEIGHT / 2);\n    printStatus();\n}\n\n/**\n * Print status\n */\nconst printStatus = function() {\n    if(samplingRate == 44100) return;\n\n    const status = \" HD:\" + samplingRate + \" \";\n    canvasContext.font = '16px sans-serif';\n    const measure = canvasContext.measureText(status);\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    canvasContext.fillRect(CANVAS_WIDTH - measure.width, 0, CANVAS_WIDTH, 18);\n    canvasContext.fillStyle = 'rgb(0, 0, 0)';\n    canvasContext.fillText(status, CANVAS_WIDTH - measure.width, 16);\n}\n\n/**\n * Fill text center\n *\n * @param {*} str\n * @param {*} height\n */\nconst fillTextCenterd = function(str, height) {\n    let left = (CANVAS_WIDTH - canvasContext.measureText(str).width) / 2;\n    canvasContext.fillText(str, left, height);\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fpIuB\")).toString();"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$2gP1w","parcelRequire","WgmController","constructor","module","samplingRate","loopMaxCount","this","worklet","worker","callback","sharedRingL","sharedRingR","sharedStatus","chunkSize","AUDIO_WORKLET_SAMPLING_CHUNK","BUFFERING_CHUNK_COUNT","feedOutRemain","feedOutSecond","Math","floor","context","gain","analyser","analyserBuffer","analyserBufferLength","async","BUFFER_RING_COUNT","SharedArrayBuffer","e","Worker","onmessage","event","dispatch","sendWorker","message","shared","ringL","ringR","status","audioWorklet","addModule","$parcel$interopDefault","$bHfhW","init","AudioWorkletNode","numberOfInputs","numberOfOutputs","outputChannelCount","processorOptions","chunkSteps","port","createGain","connect","destination","createAnalyser","frequencyBinCount","Uint8Array","getByteTimeDomainData","ready","create","wgmdata","type","sendWorklet","options","play","setValueAtTime","currentTime","getByteFrequencyData","getAnalyserBufferLength","feedout","now","linearRampToValueAtTime","data","postMessage","$1a74a79c52946617$export$82474fc2c4d8bff0","$1a74a79c52946617$export$6a88b8329b4d35e5","$1a74a79c52946617$export$2497303df528ce88","exports","URL","resolve","import","meta","url","toString","$7ryUf","$aca88a72491dc3ac$var$url","origin","workerUrl","isESM","self","location","source","JSON","stringify","createObjectURL","Blob","register","parse","$4wLdb","$54b47fc030b7b21e$var$player","$54b47fc030b7b21e$var$totalPlaylistCount","$54b47fc030b7b21e$var$musicMeta","$54b47fc030b7b21e$var$canvas","$54b47fc030b7b21e$var$canvasContext","$54b47fc030b7b21e$var$audioContext","$54b47fc030b7b21e$var$playlist","$54b47fc030b7b21e$var$samplingRate","$54b47fc030b7b21e$var$animId","document","getElementById","setAttribute","window","devicePixelRatio","screen","width","style","heigth","getContext","font","fillStyle","nowloading","left","measureText","fillText","$54b47fc030b7b21e$var$CANVAS_HEIGHT","$893d73acdfa90ef4$exports","hash","sample1","match","parseInt","fetch","arrayBuffer","AudioContext","webkitAudioContext","sampleRate","prepare","$54b47fc030b7b21e$var$start","$54b47fc030b7b21e$var$systemError","$54b47fc030b7b21e$var$title","$54b47fc030b7b21e$var$fillTextCenterd","$54b47fc030b7b21e$var$printStatus","addEventListener","$54b47fc030b7b21e$var$prevent","border","$54b47fc030b7b21e$var$onDrop","$54b47fc030b7b21e$var$sample","fillRect","removeEventListener","$54b47fc030b7b21e$var$createGd3meta","track_name","track_name_j","game_name","game_name_j","track_author","track_author_j","response","bytes","$54b47fc030b7b21e$var$play","preventDefault","stopPropagation","ev","filelist","files","dataTransfer","forEach","call","file","reader","FileReader","onload","name","result","sort","key","push","filename","xgmdata","$54b47fc030b7b21e$var$next","readAsArrayBuffer","target","shift","test","xgmfile","altMeta","resume","gd3","cancelAnimationFrame","$54b47fc030b7b21e$var$draw","game_track_name","filter","str","join","game_track_name_j","track_author_full","game_track_name_left","game_track_name_j_left","track_author_full_left","requestAnimationFrame","audioAnalyserBuffer","audioAnalyserBufferLength","lineWidth","beginPath","strokeStyle","step","round","setLineDash","moveTo","lineTo","stroke","measure","height"],"version":3,"file":"index.44957ebf.js.map"}