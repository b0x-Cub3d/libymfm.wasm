{"mappings":"IQuBI,EAaA,EACA,EAOA,EAMA,E,S,E,C,C,C,C,C,C,C,E,O,e,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,Q,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,K,E,Q,E,E,S,E,O,C,I,E,A,M,uB,E,I,O,E,K,mB,C,C,E,S,S,C,C,C,E,C,C,E,C,C,E,E,kB,G,E,S,Q,S,C,C,C,EPlDJ,a,E,E,Q,W,I,E,A,G,E,G,E,E,Q,U,I,E,A,G,E,GAEA,IAcA,EACA,EAfI,EAAU,CAAC,EAcf,EAbA,SAAkB,CAAK,EAErB,IAAK,IADD,EAAO,OAAO,KAAK,GACd,EAAI,EAAG,EAAI,EAAK,OAAQ,IAC/B,CAAO,CAAC,CAAI,CAAC,EAAE,CAAC,CAAG,CAAK,CAAC,CAAI,CAAC,EAAE,CAAC,AAErC,EASA,EARA,SAAiB,CAAE,EACjB,IAAI,EAAW,CAAO,CAAC,EAAG,CAC1B,GAAI,AAAY,MAAZ,EACF,MAAM,AAAI,MAAM,oCAAsC,GAExD,OAAO,CACT,C,G,E,S,Q,S,C,C,C,E,E,E,Q,gB,I,E,A,G,E,G,I,E,E,S,E,E,QCPO,OAAM,EAQT,YAAY,CAAM,CAAE,CAAY,CAAE,CAAY,CAAE,CAE5C,IAAI,CAAC,OAAS,EAEd,IAAI,CAAC,QAAU,KACf,IAAI,CAAC,OAAS,KACd,IAAI,CAAC,SAAW,KAEhB,IAAI,CAAC,YAAc,EAAE,CACrB,IAAI,CAAC,YAAc,EAAE,CACrB,IAAI,CAAC,aAAe,KAEpB,IAAI,CAAC,aAAe,EACpB,IAAI,CAAC,aAAe,EACpB,IAAI,CAAC,UAAY,EAAA,6BAAmC,EAApD,sBACA,IAAI,CAAC,cAAgB,EACrB,IAAI,CAAC,cAAgB,KAAK,MAAM,IAAI,CAAC,UAAY,IAAI,CAAC,cAAgB,GAEtE,IAAI,CAAC,QAAU,KACf,IAAI,CAAC,KAAO,KACZ,IAAI,CAAC,SAAW,KAChB,IAAI,CAAC,eAAiB,KACtB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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/wgm_main_thread.js","src/js/const.js","node_modules/@parcel/runtime-js/lib/runtime-4d51a37677aff010.js","node_modules/@parcel/runtime-js/lib/runtime-baae1d648c54c9cb.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-fcd6da3c2cbc8089.js","src/js/main.js","node_modules/@parcel/runtime-js/lib/runtime-22ba9c7a74f387ed.js"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire546c\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire546c\"] = parcelRequire;\n}\nparcelRequire.register(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\n$parcel$export(module.exports, \"resolve\", () => $18c11f3350a906ea$export$f7ad0328861e2f03, (v) => $18c11f3350a906ea$export$f7ad0328861e2f03 = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = {};\nfunction $18c11f3350a906ea$var$register(pairs) {\n    var keys = Object.keys(pairs);\n    for(var i = 0; i < keys.length; i++)$18c11f3350a906ea$var$mapping[keys[i]] = pairs[keys[i]];\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping[id];\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return resolved;\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nparcelRequire.register(\"4wLdb\", function(module, exports) {\n\n$parcel$export(module.exports, \"WgmController\", () => WgmController, (v) => WgmController = v);\n// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\n\nvar $2gP1w = parcelRequire(\"2gP1w\");\n\nvar $bHfhW = parcelRequire(\"bHfhW\");\n\nclass WgmController {\n    /**\n     * Constructor\n     *\n     * @param {ArrayBuffer} module WebAssembly module binary\n     * @param {number} samplingRate Sampling rate\n     * @param {number} loopMaxCount Max loop count\n     */ constructor(module, samplingRate, loopMaxCount){\n        // WebAssembly binary\n        this.module = module;\n        // Worker and Worklet\n        this.worklet = null;\n        this.worker = null;\n        this.callback = null;\n        // shared memory Worker, Worklet\n        this.sharedRingL = [];\n        this.sharedRingR = [];\n        this.sharedStatus = null;\n        // sampling rate\n        this.samplingRate = samplingRate;\n        this.loopMaxCount = loopMaxCount;\n        this.chunkSize = $2gP1w.AUDIO_WORKLET_SAMPLING_CHUNK * $2gP1w.BUFFERING_CHUNK_COUNT;\n        this.feedOutRemain = 1; // 1chunk\n        this.feedOutSecond = Math.floor(this.chunkSize * this.feedOutRemain / samplingRate);\n        // init audio contexts\n        this.context = null;\n        this.gain = null;\n        this.analyser = null;\n        this.analyserBuffer = null;\n        this.analyserBufferLength = null;\n    }\n    /**\n     * prepare AudioContext and AudioWorklet\n     *\n     * Create Worklet and compile Webassembly in Worklet\n     *\n     * @param {AudioContext} context AudioContext\n     */ async prepare(context, callback) {\n        // set audio context\n        this.context = context;\n        // create shared memory\n        try {\n            for(let i = 0; i < $2gP1w.BUFFER_RING_COUNT; i++){\n                this.sharedRingL[i] = new SharedArrayBuffer(this.chunkSize * 4); // * 4: Float32Array;\n                this.sharedRingR[i] = new SharedArrayBuffer(this.chunkSize * 4); // * 4: Float32Array;\n            }\n            this.sharedStatus = new SharedArrayBuffer(1024); // Int32Array\n        } catch (e) {\n            return false;\n        }\n        // create Worker\n        this.worker = new Worker((parcelRequire(\"eP3uQ\")));\n        this.worker.onmessage = (event)=>this.dispatch(event);\n        // create and compile Wasm Worker\n        this.sendWorker({\n            \"message\": \"compile\",\n            \"shared\": {\n                \"ringL\": this.sharedRingL,\n                \"ringR\": this.sharedRingR,\n                \"status\": this.sharedStatus\n            }\n        }, async ()=>{\n            // create worklet\n            await this.context.audioWorklet.addModule((0, (/*@__PURE__*/$parcel$interopDefault($bHfhW))));\n            callback();\n        });\n        return true;\n    }\n    /**\n     * Initialize Controller\n     *\n     * Initialize AudioNode Worklet and analyser\n     */ init() {\n        this.worklet = new AudioWorkletNode(this.context, \"wgm-worklet-processor\", {\n            \"numberOfInputs\": 1,\n            \"numberOfOutputs\": 1,\n            \"outputChannelCount\": [\n                2\n            ],\n            \"processorOptions\": {\n                \"ringL\": this.sharedRingL,\n                \"ringR\": this.sharedRingR,\n                \"status\": this.sharedStatus,\n                \"chunkSteps\": $2gP1w.BUFFERING_CHUNK_COUNT\n            }\n        });\n        // message dispatch\n        this.worklet.port.onmessage = (event)=>this.dispatch(event);\n        // connect gain\n        this.gain = this.context.createGain();\n        this.gain.connect(this.context.destination);\n        // connect node\n        this.worklet.connect(this.gain);\n        // connect fft\n        this.analyser = this.context.createAnalyser();\n        this.analyserBufferLength = this.analyser.frequencyBinCount;\n        this.analyserBuffer = new Uint8Array(this.analyserBufferLength);\n        this.analyser.getByteTimeDomainData(this.analyserBuffer);\n        this.gain.connect(this.analyser);\n    }\n    /**\n     * Instance ready?\n     *\n     * @returns {boolean}\n     */ ready() {\n        if (this.worklet == null) return false;\n        return true;\n    }\n    /**\n     * Create playable instance\n     *\n     * @param {ArrayBuffer} wgmdata\n     * @param {string} type(vgm|xgm)\n     * @param {Function} callback(gd3meta)\n     */ create(wgmdata, type, callback) {\n        // Stop the current loop if there is one\n        // Stop Atomic wait via Worklet\n        this.sendWorklet({\n            \"message\": \"stop\"\n        }, ()=>{\n            this.sendWorker({\n                \"message\": \"create\",\n                \"wgmdata\": wgmdata,\n                \"type\": type,\n                \"options\": {\n                    \"samplingRate\": this.samplingRate,\n                    \"chunkSize\": this.chunkSize,\n                    \"loopMaxCount\": this.loopMaxCount,\n                    \"feedOutRemain\": this.feedOutRemain\n                }\n            }, callback);\n        });\n    }\n    /**\n     * Start playback\n     *\n     * @param {Function} callback end music callback\n     */ play(callback) {\n        // return to 1.0\n        this.gain.gain.setValueAtTime(1, this.context.currentTime);\n        // start buffering\n        this.sendWorker({\n            \"message\": \"start\"\n        });\n        // start playback\n        this.sendWorklet({\n            \"message\": \"play\"\n        }, callback);\n    }\n    /**\n     * Get FFT data current time\n     *\n     * @returns FFT array buffer\n     */ getByteFrequencyData() {\n        this.analyser.getByteFrequencyData(this.analyserBuffer);\n        return this.analyserBuffer;\n    }\n    /**\n     * Get FFT data length\n     *\n     * @returns FFT array length\n     */ getAnalyserBufferLength() {\n        return this.analyserBufferLength;\n    }\n    /**\n     * Feed out music\n     */ feedout() {\n        const now = this.context.currentTime;\n        // feed out to 0.0\n        this.gain.gain.setValueAtTime(1, now);\n        this.gain.gain.linearRampToValueAtTime(0, now + this.feedOutSecond);\n    }\n    /**\n     * Message dispatcher\n     *\n     * @param {*} event\n     */ async dispatch(event) {\n        switch(event.data.message){\n            case \"callback\":\n                if (this.callback != null) await this.callback(event.data.data);\n                break;\n            case \"feedout\":\n                this.feedout();\n                break;\n        }\n    }\n    /**\n     * Send message to Worklet\n     *\n     * @param {*} message\n     * @param {Function} callback\n     */ sendWorklet(message, callback) {\n        // wait for a reply from the worklet\n        if (callback != null) this.callback = callback;\n        else this.callback = null;\n        // sends a message to the Worklet\n        this.worklet.port.postMessage(message);\n    }\n    /**\n     * Send message to Worklet\n     *\n     * @param {*} message\n     * @param {Function} callback\n     */ sendWorker(message, callback) {\n        // wait for a reply from the worklet\n        if (callback != null) this.callback = callback;\n        else this.callback = null;\n        // sends a message to the Worklet\n        this.worker.postMessage(message);\n    }\n}\n\n});\nparcelRequire.register(\"2gP1w\", function(module, exports) {\n\n$parcel$export(module.exports, \"AUDIO_WORKLET_SAMPLING_CHUNK\", () => $1a74a79c52946617$export$82474fc2c4d8bff0);\n$parcel$export(module.exports, \"BUFFERING_CHUNK_COUNT\", () => $1a74a79c52946617$export$6a88b8329b4d35e5);\n$parcel$export(module.exports, \"BUFFER_RING_COUNT\", () => $1a74a79c52946617$export$2497303df528ce88);\n// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\n// Audio\nconst $1a74a79c52946617$export$82474fc2c4d8bff0 = 128;\nconst $1a74a79c52946617$export$6a88b8329b4d35e5 = 768;\nconst $1a74a79c52946617$export$2497303df528ce88 = 4;\nconst $1a74a79c52946617$export$ffb92b2c1007a737 = 999;\nconst $1a74a79c52946617$export$aa5620a1095cbc3 = 0;\nconst $1a74a79c52946617$export$686712ca8e49fc53 = 1;\nconst $1a74a79c52946617$export$8d600c44ffe6cb9e = 2;\n\n});\n\nparcelRequire.register(\"bHfhW\", function(module, exports) {\n\nmodule.exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"frDq4\"), import.meta.url).toString();\n\n});\n\nparcelRequire.register(\"eP3uQ\", function(module, exports) {\n\nvar $7ryUf = parcelRequire(\"7ryUf\");\n\nlet $aca88a72491dc3ac$var$url = new URL((parcelRequire(\"27Lyk\")).resolve(\"eDdCm\"), import.meta.url);\nmodule.exports = $7ryUf($aca88a72491dc3ac$var$url.toString(), $aca88a72491dc3ac$var$url.origin, true);\n\n});\nparcelRequire.register(\"7ryUf\", function(module, exports) {\n\"use strict\";\nmodule.exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? \"import \" + JSON.stringify(workerUrl) + \";\" : \"importScripts(\" + JSON.stringify(workerUrl) + \");\";\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: \"application/javascript\"\n        }));\n    }\n};\n\n});\n\n\n\nvar $574b4c9dc2af2036$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(JSON.parse('{\"g3LtT\":\"index.bdfdbb3e.js\",\"frDq4\":\"wgm_worklet_processor.4d3ce39b.js\",\"eDdCm\":\"wgm_worker.76908457.js\",\"Sv3zf\":\"wgm_worker.2b5342f9.js\",\"fpIuB\":\"libymfm_bg.496732f9.wasm\"}'));\n\n// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\n\nvar $4wLdb = parcelRequire(\"4wLdb\");\n/**\n * VGM setting\n */ const $54b47fc030b7b21e$var$DEFAULT_SAMPLING_RATE = 44100;\nconst $54b47fc030b7b21e$var$LOOP_MAX_COUNT = 2;\n/**\n  * Canvas settings\n  */ const $54b47fc030b7b21e$var$CANVAS_WIDTH = 768;\nconst $54b47fc030b7b21e$var$CANVAS_HEIGHT = 576;\nconst $54b47fc030b7b21e$var$COLOR_MD_GREEN = \"#00a040\";\nconst $54b47fc030b7b21e$var$COLOR_MD_RED = \"#e60012\";\nconst $54b47fc030b7b21e$var$FONT_MAIN_STYLE = \"16px sans-serif\";\n/**\n * AudioWorklet Player\n * @type {WgmController}\n */ let $54b47fc030b7b21e$var$player;\n/**\n * Audio context\n * @type {AudioContext}\n */ let $54b47fc030b7b21e$var$audioContext = null;\nlet $54b47fc030b7b21e$var$isAudioContextOpen = false;\n/**\n * VGM member\n */ let $54b47fc030b7b21e$var$playlist = [];\nlet $54b47fc030b7b21e$var$totalPlaylistCount;\nlet $54b47fc030b7b21e$var$musicMeta;\nlet $54b47fc030b7b21e$var$samplingRate = $54b47fc030b7b21e$var$DEFAULT_SAMPLING_RATE;\n/**\n * Canvas\n * @type {HTMLCanvasElement}\n */ let $54b47fc030b7b21e$var$canvas;\n/**\n * CanvasContext\n * @type {CanvasRenderingContext2D}\n */ let $54b47fc030b7b21e$var$canvasContext;\nlet $54b47fc030b7b21e$var$animId = null;\n/**\n * Canvas setting\n */ (function() {\n    $54b47fc030b7b21e$var$canvas = document.getElementById(\"screen\");\n    $54b47fc030b7b21e$var$canvas.setAttribute(\"width\", $54b47fc030b7b21e$var$CANVAS_WIDTH);\n    $54b47fc030b7b21e$var$canvas.setAttribute(\"height\", $54b47fc030b7b21e$var$CANVAS_HEIGHT);\n    let pixelRatio = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    if (pixelRatio > 1 && window.screen.width < $54b47fc030b7b21e$var$CANVAS_WIDTH) {\n        $54b47fc030b7b21e$var$canvas.style.width = \"320px\";\n        $54b47fc030b7b21e$var$canvas.style.heigth = \"240px\";\n    }\n    $54b47fc030b7b21e$var$canvasContext = $54b47fc030b7b21e$var$canvas.getContext(\"2d\");\n    $54b47fc030b7b21e$var$canvasContext.font = \"20px sans-serif\";\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = $54b47fc030b7b21e$var$COLOR_MD_GREEN;\n    // now loading\n    const nowloading = \"Now Loading...\";\n    let left = ($54b47fc030b7b21e$var$CANVAS_WIDTH - $54b47fc030b7b21e$var$canvasContext.measureText(nowloading).width) / 2;\n    $54b47fc030b7b21e$var$canvasContext.fillText(nowloading, left, $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 - 32);\n})();\nvar $893d73acdfa90ef4$exports = {};\n\n$893d73acdfa90ef4$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"fpIuB\"), import.meta.url).toString();\n\n\n/**\n * Initialize system and start\n */ (async function() {\n    /**\n     * Switch sampling rate for test (ex. https://.../#s=48000)\n     *\n     *  let context = new AudioContext({ sampleRate: samplingRate })\n     *\n     * (2021/9)\n     * Support Firefox only. (I haven't confirmed anything other than Linux platform)\n     * In other browsers, the setting works, but the native connection to the audio interface drops to 44100Hz.\n     * There is probably some downsampling going on inside the browser.\n     * Also, the setting itself may be invalid in Safari.\n     */ if (location.hash != \"\") {\n        const sample = location.hash.match(/^#s=(\\d+)/);\n        if (sample != null) {\n            $54b47fc030b7b21e$var$samplingRate = parseInt(sample[1]);\n            if ($54b47fc030b7b21e$var$samplingRate != $54b47fc030b7b21e$var$samplingRate /* isNan */  || !($54b47fc030b7b21e$var$samplingRate == 44100 || $54b47fc030b7b21e$var$samplingRate == 48000 || $54b47fc030b7b21e$var$samplingRate == 88200 || $54b47fc030b7b21e$var$samplingRate == 96000)) $54b47fc030b7b21e$var$samplingRate = $54b47fc030b7b21e$var$DEFAULT_SAMPLING_RATE;\n        }\n    }\n    /**\n     * Pre-fetch WebAssemby binary module\n     */ let module = await fetch(new URL($893d73acdfa90ef4$exports));\n    module = new Uint8Array(await module.arrayBuffer());\n    $54b47fc030b7b21e$var$player = new (0, $4wLdb.WgmController)(module, $54b47fc030b7b21e$var$samplingRate, $54b47fc030b7b21e$var$LOOP_MAX_COUNT);\n    /**\n     * Create AudioContext and load WebAssembly module\n     */ $54b47fc030b7b21e$var$audioContext = new (window.AudioContext || window.webkitAudioContext)({\n        sampleRate: $54b47fc030b7b21e$var$samplingRate\n    });\n    if (!await $54b47fc030b7b21e$var$player.prepare($54b47fc030b7b21e$var$audioContext, ()=>{\n        /**\n         * Start event loop\n         */ $54b47fc030b7b21e$var$start();\n    })) $54b47fc030b7b21e$var$systemError();\n})();\n/**\n * Start event loop\n */ const $54b47fc030b7b21e$var$start = ()=>{\n    // print information\n    $54b47fc030b7b21e$var$title();\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = $54b47fc030b7b21e$var$COLOR_MD_GREEN;\n    $54b47fc030b7b21e$var$canvasContext.font = \"14px sans-serif\";\n    $54b47fc030b7b21e$var$fillTextCenterd(\"YM2149 | YM2151 | YM2203 | YM2413 | YM2608 | YM2610(B) | YM2612 | YM3526 | Y8950 | YM3812 | YMF262 | YMF278B\", $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 - 128 + 16);\n    $54b47fc030b7b21e$var$fillTextCenterd(\"SN76489(MD) | PWM(32X) | SEGAPCM | OKIM6258(X68K) | C140(C219) | OKIM6295\", $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 - 96 + 4);\n    $54b47fc030b7b21e$var$canvasContext.font = \"20px sans-serif\";\n    $54b47fc030b7b21e$var$fillTextCenterd(\"\\uD83C\\uDFB6 DRAG AND DROP VGM(vgm/vgz) || XGM(xgm/xgz) HEAR\", $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 - 32);\n    $54b47fc030b7b21e$var$canvasContext.font = \"15px sans-serif\";\n    $54b47fc030b7b21e$var$fillTextCenterd(\"or click to play sample music\", $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 + 32);\n    $54b47fc030b7b21e$var$printStatus();\n    // Set UI event\n    $54b47fc030b7b21e$var$canvas.addEventListener(\"dragover\", function(e) {\n        $54b47fc030b7b21e$var$prevent(e);\n        $54b47fc030b7b21e$var$canvas.style.border = \"4px dotted #333333\";\n        return false;\n    }, false);\n    $54b47fc030b7b21e$var$canvas.addEventListener(\"dragleave\", function(e) {\n        $54b47fc030b7b21e$var$prevent(e);\n        $54b47fc030b7b21e$var$canvas.style.border = \"4px solid #000\";\n        return false;\n    });\n    // drag to play\n    $54b47fc030b7b21e$var$canvas.addEventListener(\"drop\", $54b47fc030b7b21e$var$onDrop, false);\n    // for sample music data\n    $54b47fc030b7b21e$var$canvas.addEventListener(\"click\", $54b47fc030b7b21e$var$sample, false);\n};\n/**\n * System error\n */ const $54b47fc030b7b21e$var$systemError = ()=>{\n    $54b47fc030b7b21e$var$title();\n    $54b47fc030b7b21e$var$fillTextCenterd(\"System initialize error.\", $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 - 64);\n    $54b47fc030b7b21e$var$canvasContext.font = \"20px sans-serif\";\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = $54b47fc030b7b21e$var$COLOR_MD_GREEN;\n    $54b47fc030b7b21e$var$fillTextCenterd(\"Your browser does not support SharedArrayBuffer.\", $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2);\n    $54b47fc030b7b21e$var$fillTextCenterd(\"SharedArrayBuffer is supported by Firefox or Chromium systems.\", $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 + 32);\n// if(crossOriginIsolated) { // eslint-disable-line no-undef\n//     fillTextCenterd(\"crossOriginIsolated is not set on the server.\", CANVAS_HEIGHT / 2);\n// }\n// no set event loop\n};\n/**\n * Title screen\n */ const $54b47fc030b7b21e$var$title = ()=>{\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = \"rgb(0, 0, 0)\";\n    $54b47fc030b7b21e$var$canvasContext.fillRect(0, 0, $54b47fc030b7b21e$var$CANVAS_WIDTH, $54b47fc030b7b21e$var$CANVAS_HEIGHT);\n    $54b47fc030b7b21e$var$canvasContext.font = \"bold 28px sans-serif\";\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = $54b47fc030b7b21e$var$COLOR_MD_RED;\n    $54b47fc030b7b21e$var$fillTextCenterd(\"WebAssembly \\uD83C\\uDFAE VGM Player\", $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 - 160);\n};\n/**\n * Ready to play screen\n */ const $54b47fc030b7b21e$var$ready = ()=>{\n    $54b47fc030b7b21e$var$title();\n    $54b47fc030b7b21e$var$canvasContext.font = \"28px sans-serif\";\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = $54b47fc030b7b21e$var$COLOR_MD_GREEN;\n    $54b47fc030b7b21e$var$fillTextCenterd(\"OK! CLICK or TAP to start playback!\", $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 + 192);\n    // Playback icon\n    $54b47fc030b7b21e$var$canvasContext.arc($54b47fc030b7b21e$var$CANVAS_WIDTH / 2, $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2, $54b47fc030b7b21e$var$CANVAS_WIDTH / 8, 0 * Math.PI / 180, 360 * Math.PI / 180, false);\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = $54b47fc030b7b21e$var$COLOR_MD_RED;\n    $54b47fc030b7b21e$var$canvasContext.fill();\n    $54b47fc030b7b21e$var$canvasContext.beginPath();\n    $54b47fc030b7b21e$var$canvasContext.moveTo($54b47fc030b7b21e$var$CANVAS_WIDTH / 2 - 50 + 10, $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 - 50);\n    $54b47fc030b7b21e$var$canvasContext.lineTo($54b47fc030b7b21e$var$CANVAS_WIDTH / 2 - 50 + 10, $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 + 50);\n    $54b47fc030b7b21e$var$canvasContext.lineTo($54b47fc030b7b21e$var$CANVAS_WIDTH / 2 + 50 + 10, $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2);\n    $54b47fc030b7b21e$var$canvasContext.closePath();\n    $54b47fc030b7b21e$var$canvasContext.strokeStyle = \"#ffffff\";\n    $54b47fc030b7b21e$var$canvasContext.stroke();\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = \"#ffffff\";\n    $54b47fc030b7b21e$var$canvasContext.fill();\n    $54b47fc030b7b21e$var$isAudioContextOpen = true;\n    $54b47fc030b7b21e$var$canvas.addEventListener(\"click\", $54b47fc030b7b21e$var$next, false);\n};\n/**\n * Sample music\n */ const $54b47fc030b7b21e$var$sample = async ()=>{\n    // sample music one time\n    $54b47fc030b7b21e$var$canvas.removeEventListener(\"click\", $54b47fc030b7b21e$var$sample, false);\n    // it takes precedence over VGM metadata\n    $54b47fc030b7b21e$var$musicMeta = $54b47fc030b7b21e$var$createGd3meta({\n        track_name: \"\\uD83E\\uDD0D Thank you for trying this player\",\n        track_name_j: \"\",\n        game_name: \"\",\n        game_name_j: \"A synthesizer written in WebAssembly\",\n        track_author: \"See the GitHub repository for more information\",\n        track_author_j: \"\"\n    });\n    const response = await fetch(\"./vgm/ym2612.vgm\");\n    const bytes = await response.arrayBuffer();\n    // The sample music starts playing by clicking on it.\n    $54b47fc030b7b21e$var$isAudioContextOpen = true;\n    // Play sample music\n    $54b47fc030b7b21e$var$play(bytes, \"vgm\", $54b47fc030b7b21e$var$musicMeta);\n};\n/**\n * Event prevent\n *\n * @param {Event} e\n */ const $54b47fc030b7b21e$var$prevent = function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n};\n/**\n * Drag and Drop\n *\n * @param {DragEvent} ev\n * @returns false (prevent event)\n */ const $54b47fc030b7b21e$var$onDrop = (ev)=>{\n    $54b47fc030b7b21e$var$prevent(ev);\n    // sample music one time\n    $54b47fc030b7b21e$var$canvas.removeEventListener(\"click\", $54b47fc030b7b21e$var$sample, false);\n    // pause the drop event\n    $54b47fc030b7b21e$var$canvas.removeEventListener(\"drop\", $54b47fc030b7b21e$var$onDrop, false);\n    $54b47fc030b7b21e$var$canvas.style.border = \"4px solid #000\";\n    let filelist = {};\n    let files = ev.dataTransfer.files;\n    [].forEach.call(files, function(file) {\n        let reader = new FileReader();\n        reader.onload = function() {\n            filelist[file.name] = reader.result;\n            if (Object.keys(filelist).length >= files.length) {\n                // resume the drop event\n                $54b47fc030b7b21e$var$canvas.addEventListener(\"drop\", $54b47fc030b7b21e$var$onDrop, false);\n                $54b47fc030b7b21e$var$playlist = [];\n                Object.keys(filelist).sort().forEach(function(key) {\n                    $54b47fc030b7b21e$var$playlist.push({\n                        filename: key,\n                        xgmdata: filelist[key]\n                    });\n                });\n                $54b47fc030b7b21e$var$totalPlaylistCount = $54b47fc030b7b21e$var$playlist.length;\n                if (!$54b47fc030b7b21e$var$isAudioContextOpen) $54b47fc030b7b21e$var$ready();\n                else $54b47fc030b7b21e$var$next();\n            }\n        };\n        reader.readAsArrayBuffer(file);\n    });\n    return false;\n};\n/**\n * Play next playlist\n */ const $54b47fc030b7b21e$var$next = function() {\n    $54b47fc030b7b21e$var$canvas.removeEventListener(\"click\", $54b47fc030b7b21e$var$next, false);\n    if ($54b47fc030b7b21e$var$playlist.length <= 0) return;\n    const target = $54b47fc030b7b21e$var$playlist.shift();\n    let type = \"vgm\";\n    if (/\\.xg[m|z]$/.test(target.filename)) type = \"xgm\";\n    $54b47fc030b7b21e$var$play(target.xgmdata, type);\n};\n/**\n * Play Music\n *\n * @param {ArrayBuffer} xgmfile\n * @param {string} type(vgm|xgm)\n * @param {*} altMeta\n */ const $54b47fc030b7b21e$var$play = function(xgmfile, type, altMeta) {\n    // Worklet exchange callbacks\n    // iOS only sounds AudioWorklet that created by the click event.\n    // In the case of ScriptProcessorNode, I had to create an AudioContext here.\n    if (!$54b47fc030b7b21e$var$player.ready()) {\n        // for Chromium\n        // \"The AudioContext was not allowed to start.\n        //  It must be resumed (or created) after a user gesture on the page.\"\n        $54b47fc030b7b21e$var$audioContext.resume();\n        // create audionode and gain\n        $54b47fc030b7b21e$var$player.init();\n    }\n    $54b47fc030b7b21e$var$player.create(xgmfile, type, (gd3)=>{\n        if (altMeta == null) $54b47fc030b7b21e$var$musicMeta = $54b47fc030b7b21e$var$createGd3meta(gd3);\n        if ($54b47fc030b7b21e$var$animId != null) {\n            window.cancelAnimationFrame($54b47fc030b7b21e$var$animId);\n            $54b47fc030b7b21e$var$animId = null;\n        }\n        $54b47fc030b7b21e$var$draw();\n        $54b47fc030b7b21e$var$player.play($54b47fc030b7b21e$var$next);\n    });\n};\n/**\n * Create GD3 meta\n *\n * @param {*} meta\n * @returns\n */ const $54b47fc030b7b21e$var$createGd3meta = function(meta) {\n    meta.game_track_name = [\n        meta.game_name,\n        meta.track_name\n    ].filter((str)=>str != \"\").join(\" | \");\n    meta.game_track_name_j = [\n        meta.game_name_j,\n        meta.track_name_j\n    ].filter((str)=>str != \"\").join(\" / \");\n    meta.track_author_full = [\n        meta.track_author,\n        meta.track_author_j\n    ].filter((str)=>str != \"\").join(\" - \");\n    $54b47fc030b7b21e$var$canvasContext.font = $54b47fc030b7b21e$var$FONT_MAIN_STYLE;\n    meta.game_track_name_left = ($54b47fc030b7b21e$var$CANVAS_WIDTH - $54b47fc030b7b21e$var$canvasContext.measureText(meta.game_track_name).width) / 2;\n    meta.game_track_name_j_left = ($54b47fc030b7b21e$var$CANVAS_WIDTH - $54b47fc030b7b21e$var$canvasContext.measureText(meta.game_track_name_j).width) / 2;\n    meta.track_author_full_left = ($54b47fc030b7b21e$var$CANVAS_WIDTH - $54b47fc030b7b21e$var$canvasContext.measureText(meta.track_author_full).width) / 2;\n    return meta;\n};\n/**\n * Draw\n */ const $54b47fc030b7b21e$var$draw = function() {\n    $54b47fc030b7b21e$var$animId = window.requestAnimationFrame($54b47fc030b7b21e$var$draw);\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = \"rgb(0, 0, 0)\";\n    $54b47fc030b7b21e$var$canvasContext.fillRect(0, 0, $54b47fc030b7b21e$var$CANVAS_WIDTH, $54b47fc030b7b21e$var$CANVAS_HEIGHT);\n    let audioAnalyserBuffer = $54b47fc030b7b21e$var$player.getByteFrequencyData();\n    let audioAnalyserBufferLength = $54b47fc030b7b21e$var$player.getAnalyserBufferLength();\n    $54b47fc030b7b21e$var$canvasContext.lineWidth = 1;\n    $54b47fc030b7b21e$var$canvasContext.beginPath();\n    $54b47fc030b7b21e$var$canvasContext.strokeStyle = $54b47fc030b7b21e$var$COLOR_MD_RED;\n    let width = 4;\n    let step = Math.round(audioAnalyserBufferLength / ($54b47fc030b7b21e$var$CANVAS_WIDTH / width));\n    $54b47fc030b7b21e$var$canvasContext.setLineDash([\n        2,\n        1\n    ]);\n    $54b47fc030b7b21e$var$canvasContext.lineWidth = width;\n    for(var i = 0; i < audioAnalyserBufferLength; i += step){\n        $54b47fc030b7b21e$var$canvasContext.beginPath();\n        $54b47fc030b7b21e$var$canvasContext.moveTo(i + 2, $54b47fc030b7b21e$var$CANVAS_HEIGHT);\n        $54b47fc030b7b21e$var$canvasContext.lineTo(i + 2, $54b47fc030b7b21e$var$CANVAS_HEIGHT - audioAnalyserBuffer[i] * 1.5);\n        $54b47fc030b7b21e$var$canvasContext.stroke();\n    }\n    $54b47fc030b7b21e$var$canvasContext.stroke();\n    $54b47fc030b7b21e$var$canvasContext.font = \"12px monospace\";\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = $54b47fc030b7b21e$var$COLOR_MD_GREEN;\n    if ($54b47fc030b7b21e$var$totalPlaylistCount >= 1) $54b47fc030b7b21e$var$fillTextCenterd(\"Track \" + ($54b47fc030b7b21e$var$totalPlaylistCount - $54b47fc030b7b21e$var$playlist.length) + \" / \" + $54b47fc030b7b21e$var$totalPlaylistCount, $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 - 96);\n    $54b47fc030b7b21e$var$canvasContext.font = $54b47fc030b7b21e$var$FONT_MAIN_STYLE;\n    $54b47fc030b7b21e$var$canvasContext.fillText($54b47fc030b7b21e$var$musicMeta.game_track_name, $54b47fc030b7b21e$var$musicMeta.game_track_name_left, $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 - 64);\n    $54b47fc030b7b21e$var$canvasContext.fillText($54b47fc030b7b21e$var$musicMeta.game_track_name_j, $54b47fc030b7b21e$var$musicMeta.game_track_name_j_left, $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2 - 32);\n    $54b47fc030b7b21e$var$canvasContext.fillText($54b47fc030b7b21e$var$musicMeta.track_author_full, $54b47fc030b7b21e$var$musicMeta.track_author_full_left, $54b47fc030b7b21e$var$CANVAS_HEIGHT / 2);\n    $54b47fc030b7b21e$var$printStatus();\n};\n/**\n * Print status\n */ const $54b47fc030b7b21e$var$printStatus = function() {\n    if ($54b47fc030b7b21e$var$samplingRate == 44100) return;\n    const status = \" HD:\" + $54b47fc030b7b21e$var$samplingRate + \" \";\n    $54b47fc030b7b21e$var$canvasContext.font = \"16px sans-serif\";\n    const measure = $54b47fc030b7b21e$var$canvasContext.measureText(status);\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = $54b47fc030b7b21e$var$COLOR_MD_GREEN;\n    $54b47fc030b7b21e$var$canvasContext.fillRect($54b47fc030b7b21e$var$CANVAS_WIDTH - measure.width, 0, $54b47fc030b7b21e$var$CANVAS_WIDTH, 18);\n    $54b47fc030b7b21e$var$canvasContext.fillStyle = \"rgb(0, 0, 0)\";\n    $54b47fc030b7b21e$var$canvasContext.fillText(status, $54b47fc030b7b21e$var$CANVAS_WIDTH - measure.width, 16);\n};\n/**\n * Fill text center\n *\n * @param {*} str\n * @param {*} height\n */ const $54b47fc030b7b21e$var$fillTextCenterd = function(str, height) {\n    let left = ($54b47fc030b7b21e$var$CANVAS_WIDTH - $54b47fc030b7b21e$var$canvasContext.measureText(str).width) / 2;\n    $54b47fc030b7b21e$var$canvasContext.fillText(str, left, height);\n};\n\n\n//# sourceMappingURL=index.bdfdbb3e.js.map\n","\"use strict\";\n\nvar mapping = {};\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping[id];\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return resolved;\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\nimport * as def from './const.js'\nimport worklet from 'worklet:./wgm_worklet_processor.js'; // worklet: Parcel\n\n/**\n * AudioWorklet Controller\n */\nexport class WgmController {\n    /**\n     * Constructor\n     *\n     * @param {ArrayBuffer} module WebAssembly module binary\n     * @param {number} samplingRate Sampling rate\n     * @param {number} loopMaxCount Max loop count\n     */\n    constructor(module, samplingRate, loopMaxCount) {\n        // WebAssembly binary\n        this.module = module;\n        // Worker and Worklet\n        this.worklet = null;\n        this.worker = null;\n        this.callback = null;\n        // shared memory Worker, Worklet\n        this.sharedRingL = [];\n        this.sharedRingR = [];\n        this.sharedStatus = null;\n        // sampling rate\n        this.samplingRate = samplingRate;\n        this.loopMaxCount = loopMaxCount;\n        this.chunkSize = def.AUDIO_WORKLET_SAMPLING_CHUNK * def.BUFFERING_CHUNK_COUNT;\n        this.feedOutRemain = 1; // 1chunk\n        this.feedOutSecond = Math.floor(this.chunkSize * this.feedOutRemain / samplingRate);\n        // init audio contexts\n        this.context = null;\n        this.gain = null;\n        this.analyser = null;\n        this.analyserBuffer = null;\n        this.analyserBufferLength = null;\n    }\n\n    /**\n     * prepare AudioContext and AudioWorklet\n     *\n     * Create Worklet and compile Webassembly in Worklet\n     *\n     * @param {AudioContext} context AudioContext\n     */\n    async prepare(context, callback) {\n        // set audio context\n        this.context = context;\n        // create shared memory\n        try {\n            for(let i = 0; i < def.BUFFER_RING_COUNT; i++) {\n                this.sharedRingL[i] = new SharedArrayBuffer(this.chunkSize * 4); // * 4: Float32Array;\n                this.sharedRingR[i] = new SharedArrayBuffer(this.chunkSize * 4); // * 4: Float32Array;\n            }\n            this.sharedStatus = new SharedArrayBuffer(1024); // Int32Array\n        } catch(e) {\n            return false;\n        }\n        // create Worker\n        this.worker = new Worker(new URL('wgm_worker.js', import.meta.url), {type: 'module'});\n        this.worker.onmessage = (event) => this.dispatch(event);\n        // create and compile Wasm Worker\n        this.sendWorker({\n            \"message\": \"compile\",\n            \"shared\": {\n                \"ringL\": this.sharedRingL,\n                \"ringR\": this.sharedRingR,\n                \"status\": this.sharedStatus,\n            }\n        }, async () => {\n            // create worklet\n            await this.context.audioWorklet.addModule(worklet);\n            callback();\n        });\n\n        return true;\n    }\n\n    /**\n     * Initialize Controller\n     *\n     * Initialize AudioNode Worklet and analyser\n     */\n    init() {\n        this.worklet = new AudioWorkletNode(this.context, \"wgm-worklet-processor\", {\n            \"numberOfInputs\": 1,\n            \"numberOfOutputs\": 1,\n            \"outputChannelCount\": [2], // 2ch stereo\n            \"processorOptions\": {\n                \"ringL\": this.sharedRingL,\n                \"ringR\": this.sharedRingR,\n                \"status\": this.sharedStatus,\n                \"chunkSteps\": def.BUFFERING_CHUNK_COUNT\n            }\n        });\n        // message dispatch\n        this.worklet.port.onmessage = (event) => this.dispatch(event);\n        // connect gain\n        this.gain = this.context.createGain();\n        this.gain.connect(this.context.destination);\n        // connect node\n        this.worklet.connect(this.gain);\n        // connect fft\n        this.analyser = this.context.createAnalyser();\n        this.analyserBufferLength = this.analyser.frequencyBinCount;\n        this.analyserBuffer = new Uint8Array(this.analyserBufferLength);\n        this.analyser.getByteTimeDomainData(this.analyserBuffer);\n        this.gain.connect(this.analyser);\n    }\n\n    /**\n     * Instance ready?\n     *\n     * @returns {boolean}\n     */\n    ready() {\n        if(this.worklet == null) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Create playable instance\n     *\n     * @param {ArrayBuffer} wgmdata\n     * @param {string} type(vgm|xgm)\n     * @param {Function} callback(gd3meta)\n     */\n    create(wgmdata, type, callback) {\n        // Stop the current loop if there is one\n        // Stop Atomic wait via Worklet\n        this.sendWorklet({\"message\": \"stop\"}, () => {\n            this.sendWorker({\n                \"message\": \"create\",\n                \"wgmdata\": wgmdata,\n                \"type\": type,\n                \"options\": {\n                    \"samplingRate\": this.samplingRate,\n                    \"chunkSize\": this.chunkSize,\n                    \"loopMaxCount\": this.loopMaxCount,\n                    \"feedOutRemain\": this.feedOutRemain,\n                }\n            }, callback);\n        });\n    }\n\n    /**\n     * Start playback\n     *\n     * @param {Function} callback end music callback\n     */\n    play(callback) {\n        // return to 1.0\n        this.gain.gain.setValueAtTime(1, this.context.currentTime);\n        // start buffering\n        this.sendWorker({\"message\": \"start\"});\n        // start playback\n        this.sendWorklet({\"message\": \"play\"}, callback);\n    }\n\n    /**\n     * Get FFT data current time\n     *\n     * @returns FFT array buffer\n     */\n    getByteFrequencyData() {\n        this.analyser.getByteFrequencyData(this.analyserBuffer);\n        return this.analyserBuffer;\n    }\n\n    /**\n     * Get FFT data length\n     *\n     * @returns FFT array length\n     */\n    getAnalyserBufferLength() {\n        return this.analyserBufferLength;\n    }\n\n    /**\n     * Feed out music\n     */\n    feedout() {\n        const now = this.context.currentTime;\n        // feed out to 0.0\n        this.gain.gain.setValueAtTime(1, now);\n        this.gain.gain.linearRampToValueAtTime(0, now + this.feedOutSecond);\n    }\n\n    /**\n     * Message dispatcher\n     *\n     * @param {*} event\n     */\n    async dispatch(event) {\n        switch(event.data.message) {\n            case \"callback\": {\n                if(this.callback != null) {\n                    await this.callback(event.data.data);\n                }\n                break;\n            }\n            case \"feedout\": {\n                this.feedout();\n                break;\n            }\n        }\n    }\n\n    /**\n     * Send message to Worklet\n     *\n     * @param {*} message\n     * @param {Function} callback\n     */\n    sendWorklet(message, callback) {\n        // wait for a reply from the worklet\n        if(callback != null) {\n            this.callback = callback;\n        } else {\n            this.callback = null;\n        }\n        // sends a message to the Worklet\n        this.worklet.port.postMessage(message);\n    }\n\n    /**\n     * Send message to Worklet\n     *\n     * @param {*} message\n     * @param {Function} callback\n     */\n     sendWorker(message, callback) {\n        // wait for a reply from the worklet\n        if(callback != null) {\n            this.callback = callback;\n        } else {\n            this.callback = null;\n        }\n        // sends a message to the Worklet\n        this.worker.postMessage(message);\n    }\n}\n","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\n\n// Audio\nexport const AUDIO_WORKLET_SAMPLING_CHUNK = 128;\nexport const BUFFERING_CHUNK_COUNT = 768;\nexport const BUFFER_RING_COUNT = 4;\nexport const INIT_NOW_PLAYING_RING = 999;\n\n// Status SharedBuffer\nexport const NOW_PLAYING_RING = 0;\nexport const END_OF_MUSIC_CHUNK = 1;\nexport const FEED_OUT_START_CHUNK = 2;\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"frDq4\")).toString();","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"eDdCm\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"g3LtT\\\":\\\"index.bdfdbb3e.js\\\",\\\"frDq4\\\":\\\"wgm_worklet_processor.4d3ce39b.js\\\",\\\"eDdCm\\\":\\\"wgm_worker.76908457.js\\\",\\\"Sv3zf\\\":\\\"wgm_worker.2b5342f9.js\\\",\\\"fpIuB\\\":\\\"libymfm_bg.496732f9.wasm\\\"}\"));","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\nimport { WgmController } from \"./wgm_main_thread\";\n\n/**\n * VGM setting\n */\n const DEFAULT_SAMPLING_RATE = 44100;\n const LOOP_MAX_COUNT = 2;\n\n /**\n  * Canvas settings\n  */\n const CANVAS_WIDTH = 768;\n const CANVAS_HEIGHT = 576;\n const COLOR_MD_GREEN = '#00a040';\n const COLOR_MD_RED = '#e60012';\n const FONT_MAIN_STYLE = '16px sans-serif';\n\n/**\n * AudioWorklet Player\n * @type {WgmController}\n */\nlet player;\n\n/**\n * Audio context\n * @type {AudioContext}\n */\nlet audioContext = null;\nlet isAudioContextOpen = false;\n\n/**\n * VGM member\n */\nlet playlist = [];\nlet totalPlaylistCount;\nlet musicMeta;\nlet samplingRate = DEFAULT_SAMPLING_RATE;\n\n/**\n * Canvas\n * @type {HTMLCanvasElement}\n */\nlet canvas;\n\n/**\n * CanvasContext\n * @type {CanvasRenderingContext2D}\n */\nlet canvasContext;\n\nlet animId = null;\n\n/**\n * Canvas setting\n */\n(function() {\n    canvas = document.getElementById('screen');\n    canvas.setAttribute('width', CANVAS_WIDTH);\n    canvas.setAttribute('height', CANVAS_HEIGHT);\n    let pixelRatio = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    if(pixelRatio > 1 && window.screen.width < CANVAS_WIDTH) {\n        canvas.style.width = 320 + \"px\";\n        canvas.style.heigth = 240 + \"px\";\n    }\n    canvasContext = canvas.getContext('2d');\n    canvasContext.font = '20px sans-serif';\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    // now loading\n    const nowloading = \"Now Loading...\";\n    let left = (CANVAS_WIDTH - canvasContext.measureText(nowloading).width) / 2;\n    canvasContext.fillText(nowloading, left, CANVAS_HEIGHT / 2 - 32);\n})();\n\n/**\n * Initialize system and start\n */\n(async function() {\n    /**\n     * Switch sampling rate for test (ex. https://.../#s=48000)\n     *\n     *  let context = new AudioContext({ sampleRate: samplingRate })\n     *\n     * (2021/9)\n     * Support Firefox only. (I haven't confirmed anything other than Linux platform)\n     * In other browsers, the setting works, but the native connection to the audio interface drops to 44100Hz.\n     * There is probably some downsampling going on inside the browser.\n     * Also, the setting itself may be invalid in Safari.\n     */\n    if(location.hash != \"\") {\n        const sample = location.hash.match(/^#s=(\\d+)/);\n        if(sample != null) {\n            samplingRate = parseInt(sample[1]);\n            if(samplingRate != samplingRate /* isNan */\n                || !(samplingRate == 44100 || samplingRate == 48000 || samplingRate == 88200 || samplingRate == 96000)) {\n                samplingRate = DEFAULT_SAMPLING_RATE;\n            }\n        }\n    }\n\n    /**\n     * Pre-fetch WebAssemby binary module\n     */\n    let module = await fetch(new URL('../wasm/libymfm_bg.wasm', import.meta.url));\n    module = new Uint8Array(await module.arrayBuffer())\n    player = new WgmController(module, samplingRate, LOOP_MAX_COUNT);\n\n    /**\n     * Create AudioContext and load WebAssembly module\n     */\n    audioContext = new (window.AudioContext || window.webkitAudioContext)({ sampleRate: samplingRate });\n    if(!await player.prepare(audioContext, () => {\n        /**\n         * Start event loop\n         */\n        start();\n    })) {\n        systemError();\n    }\n})();\n\n/**\n * Start event loop\n */\nconst start = () => {\n    // print information\n    title();\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    canvasContext.font = '14px sans-serif';\n    fillTextCenterd(\"YM2149 | YM2151 | YM2203 | YM2413 | YM2608 | YM2610(B) | YM2612 | YM3526 | Y8950 | YM3812 | YMF262 | YMF278B\", CANVAS_HEIGHT / 2 - 32 * 4 + 16);\n    fillTextCenterd(\"SN76489(MD) | PWM(32X) | SEGAPCM | OKIM6258(X68K) | C140(C219) | OKIM6295\", CANVAS_HEIGHT / 2 - 32 * 3 + 4);\n    canvasContext.font = '20px sans-serif';\n    fillTextCenterd(\"🎶 DRAG AND DROP VGM(vgm/vgz) || XGM(xgm/xgz) HEAR\", CANVAS_HEIGHT / 2 - 32 * 1);\n    canvasContext.font = '15px sans-serif';\n    fillTextCenterd(\"or click to play sample music\", CANVAS_HEIGHT / 2 + 32 * 1);\n    printStatus();\n    // Set UI event\n    canvas.addEventListener('dragover', function(e) {\n        prevent(e);\n        canvas.style.border = '4px dotted #333333';\n        return false;\n    }, false);\n    canvas.addEventListener('dragleave', function(e) {\n        prevent(e);\n        canvas.style.border = '4px solid #000';\n        return false;\n    });\n    // drag to play\n    canvas.addEventListener('drop', onDrop, false);\n    // for sample music data\n    canvas.addEventListener('click', sample, false);\n};\n\n/**\n * System error\n */\nconst systemError = () => {\n    title();\n    fillTextCenterd(\"System initialize error.\", CANVAS_HEIGHT / 2 - 32 * 2);\n    canvasContext.font = '20px sans-serif';\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    fillTextCenterd(\"Your browser does not support SharedArrayBuffer.\", CANVAS_HEIGHT / 2);\n    fillTextCenterd(\"SharedArrayBuffer is supported by Firefox or Chromium systems.\", CANVAS_HEIGHT / 2 + 32);\n    // if(crossOriginIsolated) { // eslint-disable-line no-undef\n    //     fillTextCenterd(\"crossOriginIsolated is not set on the server.\", CANVAS_HEIGHT / 2);\n    // }\n    // no set event loop\n}\n\n/**\n * Title screen\n */\nconst title = () => {\n    canvasContext.fillStyle = 'rgb(0, 0, 0)';\n    canvasContext.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    canvasContext.font = 'bold 28px sans-serif';\n    canvasContext.fillStyle = COLOR_MD_RED;\n    fillTextCenterd(\"WebAssembly 🎮 VGM Player\", CANVAS_HEIGHT / 2 - 32 * 5);\n}\n\n/**\n * Ready to play screen\n */\n const ready = () => {\n    title();\n    canvasContext.font = '28px sans-serif';\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    fillTextCenterd(\"OK! CLICK or TAP to start playback!\", CANVAS_HEIGHT / 2 + 32 * 6);\n\n    // Playback icon\n    canvasContext.arc(CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2, CANVAS_WIDTH / 8, 0 * Math.PI / 180, 360 * Math.PI / 180, false);\n    canvasContext.fillStyle = COLOR_MD_RED;\n    canvasContext.fill();\n    canvasContext.beginPath();\n    canvasContext.moveTo(CANVAS_WIDTH / 2 - 50 + 10, CANVAS_HEIGHT / 2 - 50);\n    canvasContext.lineTo(CANVAS_WIDTH / 2 - 50 + 10, CANVAS_HEIGHT / 2 + 50);\n    canvasContext.lineTo(CANVAS_WIDTH / 2 + 50 + 10, CANVAS_HEIGHT / 2);\n    canvasContext.closePath();\n    canvasContext.strokeStyle = \"#ffffff\";\n    canvasContext.stroke();\n    canvasContext.fillStyle = \"#ffffff\"\n    canvasContext.fill();\n\n    isAudioContextOpen = true;\n    canvas.addEventListener('click', next, false);\n}\n\n/**\n * Sample music\n */\nconst sample = async () => {\n    // sample music one time\n    canvas.removeEventListener('click', sample, false);\n    // it takes precedence over VGM metadata\n    musicMeta = createGd3meta({\n        track_name: \"🤍 Thank you for trying this player\",\n        track_name_j: \"\",\n        game_name: \"\",\n        game_name_j: \"A synthesizer written in WebAssembly\",\n        track_author: \"See the GitHub repository for more information\",\n        track_author_j: \"\"\n    });\n    const response = await fetch('./vgm/ym2612.vgm');\n    const bytes = await response.arrayBuffer();\n    // The sample music starts playing by clicking on it.\n    isAudioContextOpen = true;\n    // Play sample music\n    play(bytes, 'vgm', musicMeta);\n}\n\n/**\n * Event prevent\n *\n * @param {Event} e\n */\nconst prevent = function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n};\n\n/**\n * Drag and Drop\n *\n * @param {DragEvent} ev\n * @returns false (prevent event)\n */\nconst onDrop = (ev) => {\n    prevent(ev);\n    // sample music one time\n    canvas.removeEventListener('click', sample, false);\n    // pause the drop event\n    canvas.removeEventListener('drop', onDrop, false);\n    canvas.style.border = '4px solid #000';\n    let filelist = {};\n    let files = ev.dataTransfer.files;\n    [].forEach.call(files, function(file) {\n        let reader = new FileReader();\n        reader.onload = function() {\n            filelist[file.name] = reader.result;\n            if(Object.keys(filelist).length >= files.length) {\n                // resume the drop event\n                canvas.addEventListener('drop', onDrop, false);\n                playlist = [];\n                Object.keys(filelist).sort().forEach(function(key) {\n                    playlist.push({ filename: key, xgmdata: filelist[key] });\n                });\n                totalPlaylistCount = playlist.length;\n                if(!isAudioContextOpen) {\n                    ready();\n                } else {\n                    next();\n                }\n            }\n        };\n        reader.readAsArrayBuffer(file);\n    });\n    return false;\n};\n\n/**\n * Play next playlist\n */\nconst next = function() {\n    canvas.removeEventListener('click', next, false);\n\n    if(playlist.length <= 0) return;\n\n    const target = playlist.shift();\n    let type = 'vgm';\n    if(/\\.xg[m|z]$/.test(target.filename)) {\n        type = 'xgm';\n    }\n    play(target.xgmdata, type);\n}\n\n/**\n * Play Music\n *\n * @param {ArrayBuffer} xgmfile\n * @param {string} type(vgm|xgm)\n * @param {*} altMeta\n */\nconst play = function(xgmfile, type, altMeta) {\n    // Worklet exchange callbacks\n    // iOS only sounds AudioWorklet that created by the click event.\n    // In the case of ScriptProcessorNode, I had to create an AudioContext here.\n    if(!player.ready()) {\n        // for Chromium\n        // \"The AudioContext was not allowed to start.\n        //  It must be resumed (or created) after a user gesture on the page.\"\n        audioContext.resume();\n        // create audionode and gain\n        player.init();\n    }\n    player.create(xgmfile, type, (gd3) => {\n        if(altMeta == null) {\n            musicMeta = createGd3meta(gd3);\n        }\n        if(animId != null) {\n            window.cancelAnimationFrame(animId);\n            animId = null;\n        }\n        draw();\n        player.play(next);\n    });\n};\n\n/**\n * Create GD3 meta\n *\n * @param {*} meta\n * @returns\n */\nconst createGd3meta = function(meta) {\n    meta.game_track_name = [meta.game_name, meta.track_name].filter(str => str != \"\").join(\" | \");\n    meta.game_track_name_j = [meta.game_name_j, meta.track_name_j].filter(str => str != \"\").join(\" / \");\n    meta.track_author_full = [meta.track_author, meta.track_author_j].filter(str => str != \"\").join(\" - \");\n    canvasContext.font = FONT_MAIN_STYLE;\n    meta.game_track_name_left = (CANVAS_WIDTH - canvasContext.measureText(meta.game_track_name).width) / 2;\n    meta.game_track_name_j_left = (CANVAS_WIDTH - canvasContext.measureText(meta.game_track_name_j).width) / 2;\n    meta.track_author_full_left = (CANVAS_WIDTH - canvasContext.measureText(meta.track_author_full).width) / 2;\n    return meta;\n};\n\n/**\n * Draw\n */\nconst draw = function() {\n    animId = window.requestAnimationFrame(draw);\n    canvasContext.fillStyle = 'rgb(0, 0, 0)';\n    canvasContext.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    let audioAnalyserBuffer = player.getByteFrequencyData();\n    let audioAnalyserBufferLength = player.getAnalyserBufferLength();\n\n    canvasContext.lineWidth = 1;\n    canvasContext.beginPath();\n    canvasContext.strokeStyle = COLOR_MD_RED;\n\n    let width = 4;\n    let step =  Math.round(audioAnalyserBufferLength / (CANVAS_WIDTH / width));\n    canvasContext.setLineDash([2, 1]);\n    canvasContext.lineWidth = width ;\n    for(var i = 0; i < audioAnalyserBufferLength; i += step) {\n        canvasContext.beginPath();\n        canvasContext.moveTo(i + 2, CANVAS_HEIGHT);\n        canvasContext.lineTo(i + 2, CANVAS_HEIGHT - (audioAnalyserBuffer[i] * 1.5));\n        canvasContext.stroke();\n    }\n    canvasContext.stroke();\n\n    canvasContext.font = \"12px monospace\";\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    if(totalPlaylistCount >= 1) {\n        fillTextCenterd(\"Track \" + (totalPlaylistCount - playlist.length) + \" / \" + totalPlaylistCount, CANVAS_HEIGHT / 2 - 96);\n    }\n    canvasContext.font = FONT_MAIN_STYLE;\n    canvasContext.fillText(musicMeta.game_track_name, musicMeta.game_track_name_left, CANVAS_HEIGHT / 2 - 64);\n    canvasContext.fillText(musicMeta.game_track_name_j, musicMeta.game_track_name_j_left, CANVAS_HEIGHT / 2 - 32);\n    canvasContext.fillText(musicMeta.track_author_full, musicMeta.track_author_full_left, CANVAS_HEIGHT / 2);\n    printStatus();\n}\n\n/**\n * Print status\n */\nconst printStatus = function() {\n    if(samplingRate == 44100) return;\n\n    const status = \" HD:\" + samplingRate + \" \";\n    canvasContext.font = '16px sans-serif';\n    const measure = canvasContext.measureText(status);\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    canvasContext.fillRect(CANVAS_WIDTH - measure.width, 0, CANVAS_WIDTH, 18);\n    canvasContext.fillStyle = 'rgb(0, 0, 0)';\n    canvasContext.fillText(status, CANVAS_WIDTH - measure.width, 16);\n}\n\n/**\n * Fill text center\n *\n * @param {*} str\n * @param {*} height\n */\nconst fillTextCenterd = function(str, height) {\n    let left = (CANVAS_WIDTH - canvasContext.measureText(str).width) / 2;\n    canvasContext.fillText(str, left, height);\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fpIuB\")).toString();"],"names":["$54b47fc030b7b21e$var$player","$54b47fc030b7b21e$var$totalPlaylistCount","$54b47fc030b7b21e$var$musicMeta","$54b47fc030b7b21e$var$canvas","$54b47fc030b7b21e$var$canvasContext","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","i","length","resolved","WgmController","$2gP1w","$bHfhW","constructor","samplingRate","loopMaxCount","worklet","worker","callback","sharedRingL","sharedRingR","sharedStatus","chunkSize","AUDIO_WORKLET_SAMPLING_CHUNK","BUFFERING_CHUNK_COUNT","feedOutRemain","feedOutSecond","Math","floor","context","gain","analyser","analyserBuffer","analyserBufferLength","prepare","BUFFER_RING_COUNT","SharedArrayBuffer","Worker","onmessage","event","dispatch","sendWorker","audioWorklet","addModule","a","__esModule","default","AudioWorkletNode","port","createGain","connect","destination","createAnalyser","frequencyBinCount","Uint8Array","getByteTimeDomainData","ready","create","wgmdata","type","sendWorklet","play","setValueAtTime","currentTime","getByteFrequencyData","getAnalyserBufferLength","feedout","now","linearRampToValueAtTime","data","message","postMessage","$1a74a79c52946617$export$82474fc2c4d8bff0","$1a74a79c52946617$export$6a88b8329b4d35e5","$1a74a79c52946617$export$2497303df528ce88","URL","resolve","url","toString","$7ryUf","$aca88a72491dc3ac$var$url","origin","workerUrl","isESM","location","source","JSON","stringify","createObjectURL","Blob","parse","$4wLdb","$54b47fc030b7b21e$var$COLOR_MD_GREEN","$54b47fc030b7b21e$var$COLOR_MD_RED","$54b47fc030b7b21e$var$FONT_MAIN_STYLE","$54b47fc030b7b21e$var$audioContext","$54b47fc030b7b21e$var$isAudioContextOpen","$54b47fc030b7b21e$var$playlist","$54b47fc030b7b21e$var$samplingRate","$54b47fc030b7b21e$var$animId","document","getElementById","setAttribute","devicePixelRatio","screen","width","style","heigth","getContext","font","fillStyle","nowloading","left","$54b47fc030b7b21e$var$CANVAS_WIDTH","measureText","fillText","$54b47fc030b7b21e$var$CANVAS_HEIGHT","$893d73acdfa90ef4$exports","hash","sample","match","parseInt","fetch","arrayBuffer","AudioContext","webkitAudioContext","sampleRate","$54b47fc030b7b21e$var$start","$54b47fc030b7b21e$var$systemError","$54b47fc030b7b21e$var$title","$54b47fc030b7b21e$var$fillTextCenterd","$54b47fc030b7b21e$var$printStatus","addEventListener","$54b47fc030b7b21e$var$prevent","border","$54b47fc030b7b21e$var$onDrop","$54b47fc030b7b21e$var$sample","fillRect","$54b47fc030b7b21e$var$ready","arc","PI","fill","beginPath","moveTo","lineTo","closePath","strokeStyle","stroke","$54b47fc030b7b21e$var$next","removeEventListener","$54b47fc030b7b21e$var$createGd3meta","track_name","track_name_j","game_name","game_name_j","track_author","track_author_j","response","bytes","$54b47fc030b7b21e$var$play","preventDefault","stopPropagation","ev","filelist","files","dataTransfer","forEach","file","reader","FileReader","onload","name","result","sort","key","push","filename","xgmdata","readAsArrayBuffer","target","shift","test","xgmfile","altMeta","resume","gd3","cancelAnimationFrame","$54b47fc030b7b21e$var$draw","meta","game_track_name","filter","str","join","game_track_name_j","track_author_full","game_track_name_left","game_track_name_j_left","track_author_full_left","requestAnimationFrame","audioAnalyserBuffer","audioAnalyserBufferLength","lineWidth","step","round","setLineDash","status","measure","height"],"version":3,"file":"index.bdfdbb3e.js.map"}