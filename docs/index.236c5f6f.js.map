{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-ea87b3687ea5defc.js","src/js/wgm_main_thread.js","node_modules/@parcel/runtime-js/lib/runtime-a6608c675ad717b2.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","src/js/main.js","node_modules/@parcel/runtime-js/lib/runtime-582144933f8338b5.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"iUJgi\\\":\\\"index.236c5f6f.js\\\",\\\"cHc5m\\\":\\\"wgm_worklet_processor.87511085.js\\\",\\\"bktC1\\\":\\\"libymfm_bg.046f24ce.wasm\\\"}\"));","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\nimport worklet from 'worklet:./wgm_worklet_processor.js'; // worklet: Parcel\n\nconst AUDIO_WORKLET_SAMPLING_CHUNK = 128;\n\n/**\n * AudioWorklet Controller\n */\nexport class WgmController {\n    /**\n     * Constructor\n     *\n     * @param {*} module WebAssembly module binary\n     * @param {*} samplingRate Sampling rate\n     * @param {*} loopMaxCount Max loop count\n     * @param {*} feedOutSecond Music feed out second\n     */\n    constructor(module, samplingRate, loopMaxCount, feedOutSecond) {\n        // WebAssembly binary\n        this.module = module;\n        // sampling rate\n        this.samplingRate = samplingRate;\n        this.loopMaxCount = loopMaxCount;\n        this.feedOutSecond = feedOutSecond;\n        this.feedOutRemain = (samplingRate * feedOutSecond) / AUDIO_WORKLET_SAMPLING_CHUNK;\n        // init audio contexts\n        this.context = null;\n        this.worklet = null;\n        this.gain = null;\n        this.analyser = null;\n        this.analyserBuffer = null;\n        this.analyserBufferLength = null;\n    }\n\n    /**\n     * Initialize Controller\n     *\n     * - Initialize AudioNode Worklet and analyser\n     * - Create Worklet and compile Webassembly in Worklet\n     *\n     * @param {*} context AudioContext\n     */\n    async init(context, callback) {\n        // set audio context\n        this.context = context;\n        // create and compile Wasm AudioWorklet\n        await this.context.audioWorklet.addModule(worklet);\n        this.worklet = new AudioWorkletNode(context, \"wgm-worklet-processor\", {\n            \"numberOfInputs\": 1,\n            \"numberOfOutputs\": 1,\n            \"outputChannelCount\": [2], // 2ch stereo\n            \"processorOptions\": {\n                \"module\": this.module,\n                \"samplingRate\": this.samplingRate,\n                \"chunkSize\": AUDIO_WORKLET_SAMPLING_CHUNK,\n                \"loopMaxCount\": this.loopMaxCount,\n                \"feedOutRemain\": this.feedOutRemain,\n            }\n        });\n        // message dispatch\n        this.callback = null;\n        this.worklet.port.onmessage = (event) => this.dispatch(event);\n        // wasm compile\n        this.send({ \"message\": \"compile\" }, () => {\n            // connect gain\n            this.gain = context.createGain();\n            this.gain.connect(this.context.destination);\n            // connect node\n            this.worklet.connect(this.gain);\n            // connect fft\n            this.analyser = this.context.createAnalyser();\n            this.analyserBufferLength = this.analyser.frequencyBinCount;\n            this.analyserBuffer = new Uint8Array(this.analyserBufferLength);\n            this.analyser.getByteTimeDomainData(this.analyserBuffer);\n            this.gain.connect(this.analyser);\n            // call main\n            callback();\n        });\n    }\n\n    /**\n     * Create playable instance\n     *\n     * @param {*} vgmdata\n     * @param {*} callback(gd3meta)\n     */\n    create(vgmdata, callback) {\n        this.gain.gain.setValueAtTime(1, this.context.currentTime);\n        this.send({\"message\": \"create\", \"vgmdata\": vgmdata}, callback);\n    }\n\n    /**\n     * Start music play\n     *\n     * @param {*} callback end music callback\n     */\n    play(callback) {\n        this.send({\"message\": \"play\"}, callback);\n    }\n\n    /**\n     * Get FFT data current time\n     *\n     * @returns FFT array buffer\n     */\n    getByteFrequencyData() {\n        this.analyser.getByteFrequencyData(this.analyserBuffer);\n        return this.analyserBuffer;\n    }\n\n    /**\n     * Get FFT data length\n     *\n     * @returns FFT array length\n     */\n    getAnalyserBufferLength() {\n        return this.analyserBufferLength;\n    }\n\n    /**\n     * Feed out music\n     */\n    feedout() {\n        this.gain.gain.setValueAtTime(1, this.context.currentTime);\n        this.gain.gain.linearRampToValueAtTime(0, this.context.currentTime + this.feedOutSecond);\n    }\n\n    /**\n     * Message dispatcher\n     *\n     * @param {*} event\n     */\n    async dispatch(event) {\n        switch(event.data.message) {\n            case \"callback\": {\n                if(this.callback != null) {\n                    await this.callback(event.data.data);\n                }\n                break;\n            }\n            case \"feedout\": {\n                this.feedout();\n                break;\n            }\n        }\n    }\n\n    /**\n     * Send message to Worklet\n     *\n     * @param {*} message\n     * @param {function} callback\n     */\n    send(message, callback) {\n        // wait for a reply from the worklet\n        if(callback != null) {\n            this.callback = callback;\n        } else {\n            this.callback = null;\n        }\n        // sends a message to the Worklet\n        this.worklet.port.postMessage(message);\n    }\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('iUJgi') + require('./helpers/bundle-manifest').resolve(\"cHc5m\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\nimport { WgmController } from \"./wgm_main_thread\";\n\n/**\n * AudioWorklet Player\n */\nlet player;\n\n/**\n * Audio context\n */\nlet audioContext = null;\n\n/**\n * VGM setting\n */\nconst DEFAULT_SAMPLING_RATE = 44100;\nconst LOOP_MAX_COUNT = 2;\nconst FEED_OUT_SECOND = 2;\n\n/**\n * Canvas settings\n */\nconst CANVAS_WIDTH = 768;\nconst CANVAS_HEIGHT = 576;\nconst COLOR_MD_GREEN = '#00a040';\nconst COLOR_MD_RED = '#e60012';\nconst FONT_MAIN_STYLE = '16px sans-serif';\n\n/**\n * VGM member\n */\nlet playlist = [];\nlet totalPlaylistCount;\nlet musicMeta;\nlet samplingRate = DEFAULT_SAMPLING_RATE;\n\n/**\n * Canvas member\n */\nlet canvas;\nlet canvasContext;\nlet animId = null;\n\n/**\n * Canvas setting\n */\n(function() {\n    canvas = document.getElementById('screen');\n    canvas.setAttribute('width', CANVAS_WIDTH);\n    canvas.setAttribute('height', CANVAS_HEIGHT);\n    let pixelRatio = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    if(pixelRatio > 1 && window.screen.width < CANVAS_WIDTH) {\n        canvas.style.width = 320 + \"px\";\n        canvas.style.heigth = 240 + \"px\";\n    }\n    canvasContext = canvas.getContext('2d');\n})();\n\n/**\n * Initialize system\n */\n(async function() {\n    /**\n     * Switch sampling rate for test (ex. https://.../#s=48000)\n     *\n     *  let context = new AudioContext({ sampleRate: samplingRate })\n     *\n     * (2021/9)\n     * Support Firefox only. (I haven't confirmed anything other than Linux platform)\n     * In other browsers, the setting works, but the native connection to the audio interface drops to 44100Hz.\n     * There is probably some downsampling going on inside the browser.\n     * Also, the setting itself may be invalid in Safari.\n     */\n    if(location.hash != \"\") {\n        const sample = location.hash.match(/^#s=(\\d+)/);\n        if(sample != null) {\n            samplingRate = parseInt(sample[1]);\n            if(samplingRate != samplingRate /* isNan */\n                || !(samplingRate == 44100 || samplingRate == 48000 || samplingRate == 88200 || samplingRate == 96000)) {\n                samplingRate = DEFAULT_SAMPLING_RATE;\n            }\n        }\n    }\n\n    /**\n     * Pre-fetch WebAssemby binary module\n     */\n    let module = await fetch(new URL('../wasm/libymfm_bg.wasm', import.meta.url));\n    module = new Uint8Array(await module.arrayBuffer())\n    player = new WgmController(module, samplingRate, LOOP_MAX_COUNT, FEED_OUT_SECOND);\n\n    /**\n     * Start event loop\n     */\n     start();\n})();\n\n/**\n * Start event loop\n */\nconst start = () => {\n    canvasContext.fillStyle = 'rgb(0, 0, 0)';\n    canvasContext.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    canvasContext.font = 'bold 28px sans-serif';\n    canvasContext.fillStyle = COLOR_MD_RED;\n    fillTextCenterd(\"WebAssembly 🎮 VGM Player\", CANVAS_HEIGHT / 2 - 32 * 4);\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    canvasContext.font = '15px sans-serif';\n    fillTextCenterd(\"YM2151 | YM2203 | YM2149 | YM2413 | YM2612 | SN76489(MD) | PWM(32x) | SEGAPCM\", CANVAS_HEIGHT / 2 - 32 * 2);\n    canvasContext.font = '20px sans-serif';\n    fillTextCenterd(\"🎵 DRAG AND DROP VGM(vgm/vgz) HEAR\", CANVAS_HEIGHT / 2 - 32 * 1);\n    fillTextCenterd(\"OR CLICK(TAP) TO PLAY SAMPLE VGM\", CANVAS_HEIGHT / 2 + 32 * 1);\n    printStatus();\n    // Set UI event\n    canvas.addEventListener('dragover', function(e) {\n        prevent(e);\n        canvas.style.border = '4px dotted #333333';\n        return false;\n    }, false);\n    canvas.addEventListener('dragleave', function(e) {\n        prevent(e);\n        canvas.style.border = 'none';\n        return false;\n    });\n    // drag to play\n    canvas.addEventListener('drop', onDrop, false);\n    // for sample music data\n    canvas.addEventListener('click', sample, false);\n};\n\n/**\n * Sample music\n */\nconst sample = async () => {\n    // sample music one time\n    canvas.removeEventListener('click', sample, false);\n    // it takes precedence over VGM metadata\n    musicMeta = createGd3meta({\n        track_name: \"WebAssembly 👾 VGM Player\",\n        track_name_j: \"\",\n        game_name: \"\",\n        game_name_j: \"YM2612 sample VGM\",\n        track_author: \"@h1romas4\",\n        track_author_j: \"\"\n    });\n    const response = await fetch('./vgm/ym2612.vgm');\n    const bytes = await response.arrayBuffer();\n    play(bytes, musicMeta);\n}\n\n/**\n * Event prevent\n *\n * @param {*} e\n */\nconst prevent = function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n};\n\n/**\n * Drag and Drop\n *\n * @param {*} ev\n * @returns false (prevent event)\n */\nconst onDrop = (ev) => {\n    prevent(ev);\n    // sample music one time\n    canvas.removeEventListener('click', sample, false);\n    // pause the drop event\n    canvas.removeEventListener('drop', onDrop, false);\n    canvas.style.border = 'none';\n    let filelist = {};\n    let files = ev.dataTransfer.files;\n    [].forEach.call(files, function(file) {\n        let reader = new FileReader();\n        reader.onload = function() {\n            filelist[file.name] = reader.result;\n            if(Object.keys(filelist).length >= files.length) {\n                // resume the drop event\n                canvas.addEventListener('drop', onDrop, false);\n                playlist = [];\n                Object.keys(filelist).sort().forEach(function(key) {\n                    playlist.push(filelist[key]);\n                });\n                totalPlaylistCount = playlist.length;\n                next();\n            }\n        };\n        reader.readAsArrayBuffer(file);\n    });\n    return false;\n};\n\n/**\n * Play next playlist\n */\nconst next = function() {\n    if(playlist.length <= 0) return;\n    play(playlist.shift());\n}\n\n/**\n * Play VGM\n *\n * @param {*} vgmfile\n * @param {*} altMeta\n */\nconst play = async function(vgmfile, altMeta) {\n    // Worklet exchange callbacks\n    const start = () => {\n        player.create(vgmfile, (gd3) => {\n            if(altMeta == null) {\n                musicMeta = createGd3meta(gd3);\n            }\n            if(animId != null) {\n                window.cancelAnimationFrame(animId);\n                animId = null;\n            }\n            player.play(next);\n            draw();\n        });\n    };\n    // iOS only sounds AudioContext that created by the click event.\n    if(audioContext == null) {\n        audioContext = new (window.AudioContext || window.webkitAudioContext)({ sampleRate: samplingRate });\n        // 100ms wait for Chromium stunby\n        await player.init(audioContext, () => { setTimeout(start, 100) });\n    } else {\n        start();\n    }\n};\n\n/**\n * Create GD3 meta\n *\n * @param {*} meta\n * @returns\n */\n const createGd3meta = function(meta) {\n    meta.game_track_name = [meta.game_name, meta.track_name].filter(str => str != \"\").join(\" | \");\n    meta.game_track_name_j = [meta.game_name_j, meta.track_name_j].filter(str => str != \"\").join(\" / \");\n    meta.track_author_full = [meta.track_author, meta.track_author_j].filter(str => str != \"\").join(\" - \");\n    canvasContext.font = FONT_MAIN_STYLE;\n    meta.game_track_name_left = (CANVAS_WIDTH - canvasContext.measureText(meta.game_track_name).width) / 2;\n    meta.game_track_name_j_left = (CANVAS_WIDTH - canvasContext.measureText(meta.game_track_name_j).width) / 2;\n    meta.track_author_full_left = (CANVAS_WIDTH - canvasContext.measureText(meta.track_author_full).width) / 2;\n    return meta;\n};\n\n/**\n * Draw\n */\nconst draw = function() {\n    animId = window.requestAnimationFrame(draw);\n    canvasContext.fillStyle = 'rgb(0, 0, 0)';\n    canvasContext.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    let audioAnalyserBuffer = player.getByteFrequencyData();\n    let audioAnalyserBufferLength = player.getAnalyserBufferLength();\n\n    canvasContext.lineWidth = 1;\n    canvasContext.beginPath();\n    canvasContext.strokeStyle = COLOR_MD_RED;\n\n    let width = 4;\n    let step =  Math.round(audioAnalyserBufferLength / (CANVAS_WIDTH / width));\n    canvasContext.setLineDash([2, 1]);\n    canvasContext.lineWidth = width ;\n    for(var i = 0; i < audioAnalyserBufferLength; i += step) {\n        canvasContext.beginPath();\n        canvasContext.moveTo(i + 2, CANVAS_HEIGHT);\n        canvasContext.lineTo(i + 2, CANVAS_HEIGHT - (audioAnalyserBuffer[i] * 1.5));\n        canvasContext.stroke();\n    }\n    canvasContext.stroke();\n\n    canvasContext.font = \"12px monospace\";\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    if(totalPlaylistCount >= 1) {\n        fillTextCenterd(\"Track \" + (totalPlaylistCount - playlist.length) + \" / \" + totalPlaylistCount, CANVAS_HEIGHT / 2 - 96);\n    }\n    canvasContext.font = FONT_MAIN_STYLE;\n    canvasContext.fillText(musicMeta.game_track_name, musicMeta.game_track_name_left, CANVAS_HEIGHT / 2 - 64);\n    canvasContext.fillText(musicMeta.game_track_name_j, musicMeta.game_track_name_j_left, CANVAS_HEIGHT / 2 - 32);\n    canvasContext.fillText(musicMeta.track_author_full, musicMeta.track_author_full_left, CANVAS_HEIGHT / 2);\n    printStatus();\n}\n\n/**\n * Print status\n */\n const printStatus = function() {\n    if(samplingRate == 44100) return;\n\n    const status = \" HD:\" + samplingRate + \" \";\n    canvasContext.font = '16px sans-serif';\n    const measure = canvasContext.measureText(status);\n    canvasContext.fillStyle = COLOR_MD_GREEN;\n    canvasContext.fillRect(CANVAS_WIDTH - measure.width, 0, CANVAS_WIDTH, 18);\n    canvasContext.fillStyle = 'rgb(0, 0, 0)';\n    canvasContext.fillText(status, CANVAS_WIDTH - measure.width, 16);\n}\n\n/**\n * Fill text center\n *\n * @param {*} str\n * @param {*} height\n */\n const fillTextCenterd = function(str, height) {\n    let left = (CANVAS_WIDTH - canvasContext.measureText(str).width) / 2;\n    canvasContext.fillText(str, left, height);\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('iUJgi') + require('./helpers/bundle-manifest').resolve(\"bktC1\");"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","WgmController","constructor","module","samplingRate","loopMaxCount","feedOutSecond","this","feedOutRemain","context","worklet","gain","analyser","analyserBuffer","analyserBufferLength","async","callback","audioWorklet","addModule","$parcel$interopDefault","$hWdwC","AudioWorkletNode","numberOfInputs","numberOfOutputs","outputChannelCount","processorOptions","chunkSize","port","onmessage","event","dispatch","send","message","createGain","connect","destination","createAnalyser","frequencyBinCount","Uint8Array","getByteTimeDomainData","create","vgmdata","setValueAtTime","currentTime","play","getByteFrequencyData","getAnalyserBufferLength","feedout","linearRampToValueAtTime","data","postMessage","exports","getBundleURL","resolve","$f29cd6c67ea13581$export$bdfd709ae4826697","$f29cd6c67ea13581$var$bundleURL","$f29cd6c67ea13581$var$getBaseURL","url","replace","value","err","matches","stack","match","$f29cd6c67ea13581$var$getBundleURL","$076a5d405d1fd9b2$var$player","$076a5d405d1fd9b2$var$audioContext","$076a5d405d1fd9b2$var$totalPlaylistCount","$076a5d405d1fd9b2$var$musicMeta","$076a5d405d1fd9b2$var$canvas","$076a5d405d1fd9b2$var$canvasContext","$076a5d405d1fd9b2$var$playlist","$076a5d405d1fd9b2$var$samplingRate","$076a5d405d1fd9b2$var$animId","document","getElementById","setAttribute","window","devicePixelRatio","screen","width","style","heigth","getContext","$e85978439c5a6efa$exports","location","hash","sample","parseInt","fetch","URL","arrayBuffer","$544ZB","$076a5d405d1fd9b2$var$start","fillStyle","fillRect","font","$076a5d405d1fd9b2$var$fillTextCenterd","$076a5d405d1fd9b2$var$CANVAS_HEIGHT","$076a5d405d1fd9b2$var$printStatus","addEventListener","e","$076a5d405d1fd9b2$var$prevent","border","$076a5d405d1fd9b2$var$onDrop","$076a5d405d1fd9b2$var$sample","removeEventListener","$076a5d405d1fd9b2$var$createGd3meta","track_name","track_name_j","game_name","game_name_j","track_author","track_author_j","response","bytes","$076a5d405d1fd9b2$var$play","preventDefault","stopPropagation","ev","filelist","files","dataTransfer","forEach","call","file","reader","FileReader","onload","name","result","sort","key","push","$076a5d405d1fd9b2$var$next","readAsArrayBuffer","shift","vgmfile","altMeta","start","gd3","cancelAnimationFrame","$076a5d405d1fd9b2$var$draw","AudioContext","webkitAudioContext","sampleRate","init","setTimeout","meta","game_track_name","filter","str","join","game_track_name_j","track_author_full","game_track_name_left","measureText","game_track_name_j_left","track_author_full_left","requestAnimationFrame","audioAnalyserBuffer","audioAnalyserBufferLength","lineWidth","beginPath","strokeStyle","step","Math","round","setLineDash","moveTo","lineTo","stroke","fillText","status","measure","height","left"],"version":3,"file":"index.236c5f6f.js.map"}