{"mappings":"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","sources":["src/js/polyfill/TextEncoderTextDecoder.js","src/wasm/libymfm_bg.js","src/js/wasi_stub_snapshot_preview1.js","src/js/wgm_worklet_processor.js","src/js/wasi_stub.js"],"sourcesContent":["// TextEncoder/TextDecoder polyfills for utf-8 - an implementation of TextEncoder/TextDecoder APIs\n// Written in 2013 by Viktor Mukhachev <vic99999@yandex.ru>\n// To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.\n// You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.\n\n// Some important notes about the polyfill below:\n// Native TextEncoder/TextDecoder implementation is overwritten\n// String.prototype.codePointAt polyfill not included, as well as String.fromCodePoint\n// TextEncoder.prototype.encode returns a regular array instead of Uint8Array\n// No options (fatal of the TextDecoder constructor and stream of the TextDecoder.prototype.decode method) are supported.\n// TextDecoder.prototype.decode does not valid byte sequences\n// This is a demonstrative implementation not intended to have the best performance\n\n// http://encoding.spec.whatwg.org/#textencoder\n\n// http://encoding.spec.whatwg.org/#textencoder\n\nexport function TextEncoder() {\n}\n\nTextEncoder.prototype.encode = function (string) {\n  var octets = [];\n  var length = string.length;\n  var i = 0;\n  while (i < length) {\n    var codePoint = string.codePointAt(i);\n    var c = 0;\n    var bits = 0;\n    if (codePoint <= 0x0000007F) {\n      c = 0;\n      bits = 0x00;\n    } else if (codePoint <= 0x000007FF) {\n      c = 6;\n      bits = 0xC0;\n    } else if (codePoint <= 0x0000FFFF) {\n      c = 12;\n      bits = 0xE0;\n    } else if (codePoint <= 0x001FFFFF) {\n      c = 18;\n      bits = 0xF0;\n    }\n    octets.push(bits | (codePoint >> c));\n    c -= 6;\n    while (c >= 0) {\n      octets.push(0x80 | ((codePoint >> c) & 0x3F));\n      c -= 6;\n    }\n    i += codePoint >= 0x10000 ? 2 : 1;\n  }\n  return octets;\n};\n\nexport function TextDecoder() {\n}\n\nTextDecoder.prototype.decode = function (octets) {\n  var string = \"\";\n  var i = 0;\n  if(octets == null) return; // add hack by h1romas4\n  while (i < octets.length) {\n    var octet = octets[i];\n    var bytesNeeded = 0;\n    var codePoint = 0;\n    if (octet <= 0x7F) {\n      bytesNeeded = 0;\n      codePoint = octet & 0xFF;\n    } else if (octet <= 0xDF) {\n      bytesNeeded = 1;\n      codePoint = octet & 0x1F;\n    } else if (octet <= 0xEF) {\n      bytesNeeded = 2;\n      codePoint = octet & 0x0F;\n    } else if (octet <= 0xF4) {\n      bytesNeeded = 3;\n      codePoint = octet & 0x07;\n    }\n    if (octets.length - i - bytesNeeded > 0) {\n      var k = 0;\n      while (k < bytesNeeded) {\n        octet = octets[i + k + 1];\n        codePoint = (codePoint << 6) | (octet & 0x3F);\n        k += 1;\n      }\n    } else {\n      codePoint = 0xFFFD;\n      bytesNeeded = octets.length - i;\n    }\n    string += String.fromCodePoint(codePoint);\n    i += bytesNeeded + 1;\n  }\n  return string\n};\n","let wasm; export function setWasmExport(exports) { wasm = exports; }\nimport {TextEncoder, TextDecoder} from '../js/polyfill/TextEncoderTextDecoder.js';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n*/\nexport class WgmPlay {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WgmPlay.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wgmplay_free(ptr);\n    }\n    /**\n    *\n    * constructor\n    * @param {number} output_sampling_rate\n    * @param {number} output_sample_chunk_size\n    * @param {number} data_length\n    */\n    constructor(output_sampling_rate, output_sample_chunk_size, data_length) {\n        var ret = wasm.wgmplay_from(output_sampling_rate, output_sample_chunk_size, data_length);\n        return WgmPlay.__wrap(ret);\n    }\n    /**\n    *\n    * Return vgmdata buffer referance.\n    * @returns {number}\n    */\n    get_seq_data_ref() {\n        var ret = wasm.wgmplay_get_seq_data_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Return sampling_l buffer referance.\n    * @returns {number}\n    */\n    get_sampling_l_ref() {\n        var ret = wasm.wgmplay_get_sampling_l_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Return sampling_r buffer referance.\n    * @returns {number}\n    */\n    get_sampling_r_ref() {\n        var ret = wasm.wgmplay_get_sampling_r_ref(this.ptr);\n        return ret;\n    }\n    /**\n    *\n    * Get the JSON parsed from the header of the VGM file.\n    * @returns {string}\n    */\n    get_seq_header() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wgmplay_get_seq_header(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *\n    * Get the JSON parsed GD3 of the VGM file.\n    * @returns {string}\n    */\n    get_seq_gd3() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.wgmplay_get_seq_gd3(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *\n    * Initialize sound driver.\n    * @returns {boolean}\n    */\n    init() {\n        var ret = wasm.wgmplay_init(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    *\n    * Continue playing until output_sample_chunk_size is satisfied.\n    *\n    * The number of times the song has been looped will be returned.\n    * In the case of an infinite loop, the std::usize::MAX value is always returned.\n    * @returns {number}\n    */\n    play() {\n        var ret = wasm.wgmplay_play(this.ptr);\n        return ret >>> 0;\n    }\n}\n\nexport function __wbg_new_59cb74e423758ede() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_stack_558ba5917b466edd(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_error_4bb6c2a97407129a(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\n/**\n * wasi_snapshot_preview1 dummy stab\n */\n\n/**\n * fd_seek\n *\n * @param {number} fd\n * @param {number | bigint} offset\n * @param {number} whence\n * @param {number} newOffsetPtr\n */\nexport const fd_seek = function(fd, offset, whence, newOffsetPtr) { // eslint-disable-line\n    console.log(`fd_seek: ${fd}, ${offset}, ${whence}, ${newOffsetPtr}`);\n};\n\n/**\n * fd_write\n *\n * @param {number} fd\n * @param {number} iovs\n * @param {number} iovsLen\n * @param {number} nwritten\n */\nexport const fd_write = function(fd, iovs, iovsLen, nwritten) { // eslint-disable-line\n    console.log(`fd_write: ${fd}, ${iovs}, ${iovsLen}, ${nwritten}`);\n};\n\n/**\n * fd_close\n *\n * @param {number} fd\n */\nexport const fd_close = function(fd) { // eslint-disable-line\n    console.log(`fd_close: ${fd}`);\n};\n\n/**\n * fd_fdstat_get\n *\n * @param {number} fd\n * @param number} bufPtr\n */\nexport const fd_fdstat_get = function(fd, bufPtr) { // eslint-disable-line\n    console.log(`fd_fdstat_get: ${fd}, ${bufPtr}`);\n}\n\n/**\n * path_open\n *\n * @param {number} dirfd\n * @param {number} dirflags\n * @param {number} pathPtr\n * @param {number} pathLen\n * @param {number} oflags\n * @param {BigIntPolyfillType | number} fsRightsBase\n * @param {BigIntPolyfillType | number} fsRightsInheriting\n * @param {number} fsFlags\n * @param {number} fd\n */\nexport const path_open = function (dirfd, dirflags, pathPtr, pathLen, oflags, fsRightsBase, fsRightsInheriting, fsFlags, fd) { // eslint-disable-line\n    console.log(`path_open: ${dirfd}, ${dirflags}, ${pathPtr}, ${pathLen}, ${oflags}, ${fsRightsBase}, ${fsRightsInheriting}, ${fsFlags}, ${fd}`);\n}\n\n/**\n * fd_fdstat_set_flags\n *\n * @param {number} dirfd\n * @param {number} dirflags\n * @param {number} pathPtr\n * @param {number} pathLen\n * @param {number} oflags\n * @param {BigIntPolyfillType | number} fsRightsBase\n * @param {BigIntPolyfillType | number} fsRightsInheriting\n * @param {number} fsFlags\n * @param {number} fd\n */\nexport const fd_fdstat_set_flags = function(dirfd, dirflags, pathPtr, pathLen, oflags, fsRightsBase, fsRightsInheriting, fsFlags, fd) { // eslint-disable-line\n    console.log(`fd_fdstat_set_flags: ${dirfd}, ${dirflags}, ${pathPtr}, ${pathLen}, ${oflags}, ${fsRightsBase}, ${fsRightsInheriting}, ${fsFlags}, ${fd}`);\n}\n\n/**\n * fd_read\n *\n * @param {number} fd\n * @param {number} iovs\n * @param {number} iovsLen\n * @param {number} nread\n */\nexport const fd_read = function(fd, iovs, iovsLen, nread) { // eslint-disable-line\n    console.log(`fd_fdstat_get: ${fd}, ${iovs}, ${iovsLen}, ${nread}`);\n}\n\n/**\n * environ_sizes_get\n *\n * @param {*} environcOffset\n * @param {*} environBufferSizeOffset\n */\nexport const environ_sizes_get = function(environcOffset, environBufferSizeOffset) {\n    console.log(`environ_sizes_get: ${environcOffset}, ${environBufferSizeOffset}`);\n}\n\n/**\n * proc_exit\n *\n * @param {*} rval\n */\nexport const proc_exit = function(rval) {\n    console.log(`proc_exit: ${rval}`);\n}\n\n/**\n * environ_get\n *\n * @param {*} environOffset\n * @param {*} environBufferOffset\n */\nexport const environ_get = function(environOffset, environBufferOffset) {\n    console.log(`environ_get: ${environOffset}, ${environBufferOffset}`);\n}\n\n/**\n * random_get\n *\n * @param {*} bufferOffset\n * @param {*} bufferLength\n */\nexport const random_get = function(bufferOffset, bufferLength) {\n    console.log(`random_get: ${bufferOffset}, ${bufferLength}`);\n    return 0;\n}\n","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\nimport { WgmPlay, setWasmExport } from \"../wasm/libymfm_bg\";\nimport { initWasi } from './wasi_stub';\n\n/**\n * WgmWorkletProcessor\n */\nclass WgmWorkletProcessor extends AudioWorkletProcessor {\n    /**\n     * Constructor\n     *\n     * @param {*} options\n     */\n    constructor(options) {\n        super();\n        // get option\n        const opt = options.processorOptions;\n        this.module = opt.module;\n        this.samplingRate = opt.samplingRate;\n        this.chunkSize = opt.chunkSize;\n        this.loopMaxCount = opt.loopMaxCount;\n        this.feedOutRemain = opt.feedOutRemain;\n        // wgm instance\n        this.wgmplay = null;\n        this.memory = null;\n        // instance status\n        this.play = false;\n        this.feedOutCount = 0;\n        // message dispatch\n        this.port.onmessage = (event) => this.dispatch(event);\n    }\n\n    /**\n     * Waveform generation process\n     *\n     * @param {*} inputs\n     * @param {*} outputs\n     * @param {*} parameters\n     * @return {boolean} next stage\n     */\n    process(inputs, outputs, parameters) { // eslint-disable-line no-unused-vars\n        if(!this.play) return true;\n        try {\n            // create wave\n            const loop = this.wgmplay.play();\n            // output\n            outputs[0][0].set(new Float32Array(this.memory.buffer, this.wgmplay.get_sampling_l_ref(), this.chunkSize));\n            outputs[0][1].set(new Float32Array(this.memory.buffer, this.wgmplay.get_sampling_r_ref(), this.chunkSize));\n            if(loop >= this.loopMaxCount) {\n                if(this.feedOutCount == 0 && loop > this.loopMaxCount) {\n                    // no loop track\n                    this.play = false;\n                    this.port.postMessage({\"message\": \"callback\", \"data\": \"OK\"});\n                } else {\n                    // feed out start\n                    if(this.feedOutCount == 0) {\n                        this.port.postMessage({\"message\": \"feedout\"});\n                    }\n                    this.feedOutCount++;\n                    // feed out end and next track\n                    if(this.feedOutCount >= this.feedOutRemain) {\n                        this.play = false;\n                        this.port.postMessage({\"message\": \"callback\", \"data\": \"OK\"});\n                    }\n                }\n            }\n            // next stage\n            return true;\n        } catch(e) {\n            this.play = false;\n            console.log(`An unexpected error has occurred. System has stoped. Please reload brwoser.\\n${e}`);\n            return false;\n        }\n    }\n\n    /**\n     * Message dispatcher\n     *\n     * @param {*} event\n     */\n    async dispatch(event) {\n        switch(event.data.message) {\n            case 'compile': {\n                await this.compile();\n                this.port.postMessage({\"message\": \"callback\", \"data\": \"OK\"});\n                break;\n            }\n            case 'create': {\n                this.port.postMessage({\"message\": \"callback\", \"data\":this.create(event.data.vgmdata)});\n                break;\n            }\n            case 'play': {\n                this.play = true;\n                break;\n            }\n        }\n    }\n\n    /**\n     * Compile and setting WebAssembly\n     */\n    async compile() {\n        const exports = await initWasi(this.module);\n        setWasmExport(exports);\n        this.memory = exports.memory;\n    }\n\n    /**\n     * Create or recreate WgmPlay instance for play VGM\n     *\n     * @param {*} vgmdata\n     * @returns music GD3 meta\n     */\n    create(vgmdata) {\n        // init instance (init sound devicies)\n        if(this.wgmplay != null) {\n            this.wgmplay.free();\n            this.wgmplay = null; // force GC\n        }\n        // create and set data\n        this.wgmplay = new WgmPlay(this.samplingRate, this.chunkSize, vgmdata.byteLength);\n        let seqdata = new Uint8Array(this.memory.buffer, this.wgmplay.get_seq_data_ref(), vgmdata.byteLength);\n        seqdata.set(new Uint8Array(vgmdata));\n        if(!this.wgmplay.init()) {\n            this.wgmplay.free();\n            this.wgmplay = null;\n        }\n        // init state\n        this.feedOutCount = 0;\n        // return music meta\n        return JSON.parse(this.wgmplay.get_seq_gd3());\n    }\n}\n\nregisterProcessor('wgm-worklet-processor', WgmWorkletProcessor);\n","// license:BSD-3-Clause\n// copyright-holders:Hiromasa Tanaka\nimport * as wasi from './wasi_stub_snapshot_preview1';\nimport * as libymfm from '../wasm/libymfm_bg';\n\n/**\n * Initialize WebAssembly with Worklet and wasi-stub\n *\n * Need wasm-bindgen generate source code patch for insert wasm export.\n * TextEncoder/Decoder cannot be used in Worklets\n *\n * > import * as wasm from './libymfm_bg.wasm';\n * < let wasm; export function setWasmExport(exports) { wasm = exports; }\n * < import '../js/polyfill/TextEncoderTextDecoder.js';\n *\n * @see scripts/wasm_bindgen_patch.js\n * @returns instance.exports\n */\nexport async function initWasi(module) {\n    let wasm = await WebAssembly.compile(module);\n    // merge wasm imports\n    //   (import \"wasi_snapshot_preview1\" \"fd_seek\" (func $__wasi_fd_seek (type $t25)))\n    //   (import \"./libymfm_bg.js\" \"__wbg_new_59cb74e423758ede\"...)\n    let imposts = {};\n    imposts['wasi_snapshot_preview1'] = wasi;\n    imposts['./libymfm_bg.js'] = libymfm;\n    const instance = await WebAssembly.instantiate(wasm, {\n        ...imposts\n    });\n\n    // return wasm exports(for call setWasmExport())\n    return instance.exports;\n}\n"],"names":["$0439419e3a0fda61$export$88fb0cfd153261a7","$0439419e3a0fda61$export$9c6b53e35bc51b5c","$e632641028fe68b4$var$wasm","$e632641028fe68b4$export$610d0ad2012606bf","exports","prototype","encode","string","octets","length","i","codePoint","codePointAt","c","bits","push","decode","octet","bytesNeeded","k","String","fromCodePoint","$e632641028fe68b4$var$heap","Array","fill","undefined","$e632641028fe68b4$var$getObject","idx","$e632641028fe68b4$var$heap_next","$e632641028fe68b4$var$takeObject","ret","$e632641028fe68b4$var$dropObject","$e632641028fe68b4$var$cachedTextDecoder","ignoreBOM","fatal","$e632641028fe68b4$var$cachegetUint8Memory0","$e632641028fe68b4$var$getUint8Memory0","buffer","memory","Uint8Array","$e632641028fe68b4$var$getStringFromWasm0","ptr","len","subarray","$e632641028fe68b4$var$cachegetInt32Memory0","$e632641028fe68b4$var$getInt32Memory0","Int32Array","$e632641028fe68b4$var$WASM_VECTOR_LEN","$e632641028fe68b4$var$cachedTextEncoder","$e632641028fe68b4$var$encodeString","encodeInto","arg","view","buf","set","read","written","$e632641028fe68b4$export$9eaa943f88fb0281","obj","Object","create","__destroy_into_raw","this","free","__wbg_wgmplay_free","constructor","output_sampling_rate","output_sample_chunk_size","data_length","wgmplay_from","__wrap","get_seq_data_ref","wgmplay_get_seq_data_ref","get_sampling_l_ref","wgmplay_get_sampling_l_ref","get_sampling_r_ref","wgmplay_get_sampling_r_ref","get_seq_header","retptr","__wbindgen_add_to_stack_pointer","wgmplay_get_seq_header","r0","r1","__wbindgen_free","get_seq_gd3","wgmplay_get_seq_gd3","init","wgmplay_init","play","wgmplay_play","$e632641028fe68b4$export$5ec29d37f2da3dea","$e632641028fe68b4$var$addHeapObject","Error","$e632641028fe68b4$export$ddb7fd043ce1f046","arg0","arg1","ptr0","malloc","realloc","mem","offset","code","charCodeAt","slice","$e632641028fe68b4$var$passStringToWasm0","stack","__wbindgen_malloc","__wbindgen_realloc","len0","$e632641028fe68b4$export$2b7a18610b2403a6","console","error","$e632641028fe68b4$export$b385d28488f5908e","$e632641028fe68b4$export$39a6850c64af1eb3","$d38a7d1158f2f744$export$6c5f506620966cf7","fd","whence","newOffsetPtr","log","$d38a7d1158f2f744$export$2616916edbd1e13c","iovs","iovsLen","nwritten","$d38a7d1158f2f744$export$84e77a486891749a","$d38a7d1158f2f744$export$3a1066b9f83487e","bufPtr","$d38a7d1158f2f744$export$dbb8dbe51f4053fe","dirfd","dirflags","pathPtr","pathLen","oflags","fsRightsBase","fsRightsInheriting","fsFlags","$d38a7d1158f2f744$export$b00b3784842d9fd5","$d38a7d1158f2f744$export$b70df2fee60c3c01","nread","$d38a7d1158f2f744$export$2919a4c065c4b7c1","environcOffset","environBufferSizeOffset","$d38a7d1158f2f744$export$fecdc1b06990bd3e","rval","$d38a7d1158f2f744$export$df24b957c3b7eea9","environOffset","environBufferOffset","$d38a7d1158f2f744$export$e572184c4600826a","bufferOffset","bufferLength","$4f0b8856bb92f348$var$WgmWorkletProcessor","AudioWorkletProcessor","options","super","opt","processorOptions","module","samplingRate","chunkSize","loopMaxCount","feedOutRemain","wgmplay","feedOutCount","port","onmessage","event","dispatch","process","inputs","outputs","parameters","loop","Float32Array","postMessage","message","data","e","async","compile","vgmdata","wasm","WebAssembly","imposts","$d38a7d1158f2f744$exports","$e632641028fe68b4$exports","instantiate","$2a362903424fc7ef$export$eda0bbb7300d222b","byteLength","JSON","parse","registerProcessor"],"version":3,"file":"wgm_worklet_processor.ed3f5c00.js.map"}