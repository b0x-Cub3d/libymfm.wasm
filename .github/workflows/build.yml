name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
        token: ${{secrets.GITHUB_TOKEN}}
    - name: wasi-sdk Toolchain Setup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        rustup install nightly
        rustup default nightly
        rustup target add wasm32-wasi
        wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-15/wasi-sdk-15.0-linux.tar.gz
        tar zxvf wasi-sdk-15.0-linux.tar.gz
    - name: Build libymfm
      run: |
        export WASI_SDK_PATH=$(pwd)/wasi-sdk-15.0
        export CARGO_TARGET_WASM32_WASI_LINKER=${WASI_SDK_PATH}/bin/lld
        export CARGO_TARGET_WASM32_WASI_RUSTFLAGS="-L ${WASI_SDK_PATH}/share/wasi-sysroot/lib/wasm32-wasi"
        (mkdir build && cd build && cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/wasi.cmake .. && make -j4)
        cargo +nightly build --release --target wasm32-wasi --features bindgen
        ls -laF target/wasm32-wasi/release/
    - name: Buile examples/web
      run: |
        cargo install wasm-bindgen-cli --version 0.2.78
        wasm-bindgen target/wasm32-wasi/release/libymfm.wasm --out-dir ./examples/web/src/wasm/
        (cd examples/web && npm install && npm run build)
        ls -laF examples/web/dist/
